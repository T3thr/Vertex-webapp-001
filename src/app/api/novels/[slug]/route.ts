// src/app/api/novels/[slug]/route.ts
import { NextResponse } from "next/server";
import dbConnect from "@/backend/lib/mongodb";
import NovelModel, { INovel } from "@/backend/models/Novel";
import UserModel from "@/backend/models/User";
import EpisodeModel from "@/backend/models/Episode";
import CategoryModel from "@/backend/models/Category"; 

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≤‡∏° slug
async function getNovelBySlug(slug: string): Promise<INovel | null> {
  await dbConnect(); // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

  const User = UserModel(); // ‡πÇ‡∏´‡∏•‡∏î User Model
  const Category = CategoryModel(); // ‡πÇ‡∏´‡∏•‡∏î Category Model
  const Episode = EpisodeModel(); // ‡πÇ‡∏´‡∏•‡∏î Episode Model

  const novel = await NovelModel()
    .findOne({ slug: slug, isDeleted: false /* visibility: "public" */ }) // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢ slug, ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡∏ö (‡∏≠‡∏≤‡∏à‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á visibility ‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á)
    .populate({
      path: "author",
      select: "username profile.displayName profile.avatar", // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å User
      model: User, // ‡∏£‡∏∞‡∏ö‡∏∏ model ‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    })
    .populate({
      path: "categories",
      select: "name slug iconUrl themeColor", // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Category
      model: Category, // ‡∏£‡∏∞‡∏ö‡∏∏ model
    })
    .populate({
      path: "subCategories",
      select: "name slug", // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å Category
      model: Category, // ‡∏£‡∏∞‡∏ö‡∏∏ model
    })
    // ‡πÑ‡∏°‡πà populate episodes ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î response Œ±œÅœáŒπŒ∫Œ¨, ‡∏´‡∏ô‡πâ‡∏≤ page ‡∏à‡∏∞ fetch ‡πÅ‡∏¢‡∏Å‡∏ñ‡πâ‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    .lean(); // ‡πÉ‡∏ä‡πâ lean() ‡πÄ‡∏û‡∏∑‡πà‡∏≠ performance

  return novel as INovel | null;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Handler ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö GET request
export async function GET(
  request: Request,
  { params }: { params: { slug: string } } // <--- Signature ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
) {
  const slug = params.slug; // ‡∏î‡∏∂‡∏á slug ‡∏à‡∏≤‡∏Å params

  console.log(`üì° API /api/novels/${slug} called`);

  if (!slug) {
    console.error("‚ùå Slug parameter is missing");
    return NextResponse.json({ error: "Slug ‡∏´‡∏≤‡∏¢‡πÑ‡∏õ" }, { status: 400 });
  }

  try {
    const novel = await getNovelBySlug(slug); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

    if (!novel) {
      console.log(`‚ÑπÔ∏è Novel with slug "${slug}" not found.`);
      return NextResponse.json({ error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ" }, { status: 404 });
    }

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≠‡∏ô (episodes) ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
    // ‡πÅ‡∏ï‡πà‡πÇ‡∏î‡∏¢‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏´‡∏ô‡πâ‡∏≤ page component ‡∏à‡∏∞ fetch ‡πÄ‡∏≠‡∏á
    // const episodes = await EpisodeModel()
    //   .find({ novel: novel._id, isDeleted: false, status: "published" })
    //   .sort({ episodeNumber: 1 })
    //   .select("title slug episodeNumber isFree priceInCoins publishedAt viewsCount")
    //   .lean();

    console.log(`‚úÖ Successfully fetched novel: ${novel.title}`);
    return NextResponse.json(
        { novel /* , episodes */ }, // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ (‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ô ‡∏ñ‡πâ‡∏≤‡∏î‡∏∂‡∏á‡∏°‡∏≤)
        { status: 200 }
    );
  } catch (error: any) {
    console.error(`‚ùå Error fetching novel with slug "${slug}":`, error);
    return NextResponse.json(
      { error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢" },
      { status: 500 }
    );
  }
}