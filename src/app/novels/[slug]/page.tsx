// src/app/novels/[slug]/page.tsx
// Dynamic Route Page ‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
'use server'; // ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Server Component

import { Metadata, ResolvingMetadata } from "next";
import { notFound } from "next/navigation";
// Import interface ‡∏à‡∏≤‡∏Å API route ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
import { PopulatedNovelForDetailPage } from "@/app/api/novels/[slug]/route"; // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠ interface ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏° API
import { NovelHeader } from "@/components/novels/NovelHeader";
import { NovelTabs } from "@/components/novels/NovelTabs";
// (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°) Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á Character List ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
// import { NovelCharactersSection } from "@/components/novels/NovelCharactersSection";

// --- Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Props ---
interface NovelPageProps {
  params: Promise<{ slug: string }>; // params ‡πÉ‡∏ô Next.js 15+ ‡πÄ‡∏õ‡πá‡∏ô Promise
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Fetch ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ ---
async function getNovelData(slug: string): Promise<PopulatedNovelForDetailPage | null> {
  let baseUrl = process.env.NEXT_PUBLIC_API_URL;
  if (!baseUrl) {
    if (process.env.VERCEL_URL) {
      baseUrl = `https://${process.env.VERCEL_URL}`;
    } else {
      baseUrl = "http://localhost:3000"; // Fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö local development
    }
  }
  const apiUrl = `${baseUrl}/api/novels/${encodeURIComponent(slug)}`; // Encode slug ‡πÄ‡∏™‡∏°‡∏≠
  console.log(`üìÑ [page.tsx] ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö slug "${slug}" ‡∏à‡∏≤‡∏Å: ${apiUrl}`);

  try {
    const res = await fetch(apiUrl, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
      next: { revalidate: 60 } // Revalidate ‡∏ó‡∏∏‡∏Å 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    });

    if (res.status === 404) {
      console.warn(`‚ö†Ô∏è [page.tsx] ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö slug "${slug}" (404 ‡∏à‡∏≤‡∏Å API: ${apiUrl})`);
      return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡πÄ‡∏°‡∏∑‡πà‡∏≠ API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢ 404
    }

    if (!res.ok) {
      const errorText = await res.text();
      console.error(`‚ùå [page.tsx] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å ${apiUrl}: ${res.status} ${res.statusText}. Body: ${errorText}`);
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á Error ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• status ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Next.js error boundary (error.tsx) ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
      const error = new Error(`API request failed with status ${res.status}: ${res.statusText}`);
      (error as any).status = res.status;
      throw error;
    }

    const data = await res.json();
    if (!data.novel) {
      console.warn(`‚ö†Ô∏è [page.tsx] API ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏û‡∏ö data.novel ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö slug "${slug}" ‡∏à‡∏≤‡∏Å: ${apiUrl}`);
      return null; // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡∏ñ‡πâ‡∏≤ data.novel ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    }

    console.log(`‚úÖ [page.tsx] ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: "${data.novel.title}"`);
    return data.novel as PopulatedNovelForDetailPage;
  } catch (error: any) {
    console.error(`‚ùå [page.tsx] ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö slug "${slug}" ‡∏à‡∏≤‡∏Å ${apiUrl}:`, error.message, error.stack);
    // ‡∏ñ‡πâ‡∏≤ error ‡∏°‡∏µ status (‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏≤‡∏Å res.ok = false ‡∏ó‡∏µ‡πà throw error ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤) ‡πÉ‡∏´‡πâ re-throw
    if (error.status) {
      throw error;
    }
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÄ‡∏ä‡πà‡∏ô network error, JSON parse error ‡∏à‡∏≤‡∏Å try-catch ‡∏ô‡∏≠‡∏Å) ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô null ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ notFound() ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    return null;
  }
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Generate Metadata (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö SEO ‡πÅ‡∏•‡∏∞ Social Sharing) ---
export async function generateMetadata(
  { params }: NovelPageProps, // ‡πÉ‡∏ä‡πâ interface ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö component ‡∏´‡∏•‡∏±‡∏Å
  parent: ResolvingMetadata
): Promise<Metadata> {
  const { slug } = await params; // ‡∏£‡∏≠‡πÉ‡∏´‡πâ params ‡∏ñ‡∏π‡∏Å resolve
  const novel = await getNovelData(slug);

  if (!novel) {
    return {
      title: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ - NovelMaze",
      description: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ (slug: ${slug})`,
    };
  }

  const siteName = "NovelMaze";
  const pageTitle = `${novel.title} - ${siteName}`;
  const description = novel.synopsis
    ? novel.synopsis.substring(0, 160) + (novel.synopsis.length > 160 ? "..." : "")
    : `‡∏≠‡πà‡∏≤‡∏ô‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ ${novel.title} ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏î‡∏¢ ${novel.author?.profile?.penName || novel.author?.profile?.displayName || novel.author?.username || ''} ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà ${siteName}`;

  let imageUrl = novel.coverImageUrl || `${process.env.NEXT_PUBLIC_BASE_URL || ''}/opengraph-image.png`;
  if (imageUrl && !imageUrl.startsWith('http') && !imageUrl.startsWith('/')) {
      imageUrl = `${process.env.NEXT_PUBLIC_BASE_URL || ''}${imageUrl.startsWith('/') ? '' : '/'}${imageUrl}`;
  } else if (!imageUrl) {
      imageUrl = `${process.env.NEXT_PUBLIC_BASE_URL || ''}/opengraph-image.png`;
  }

  const publishedTime = novel.firstPublishedAt ? new Date(novel.firstPublishedAt).toISOString() : undefined;
  const modifiedTime = novel.updatedAt ? new Date(novel.updatedAt).toISOString() : undefined;

  return {
    title: pageTitle,
    description: description,
    keywords: novel.customTags || [],
    authors: [{ name: novel.author?.profile?.penName || novel.author?.profile?.displayName || novel.author?.username || "NovelMaze Author" }],
    alternates: {
      canonical: `/novels/${novel.slug}`,
    },
    openGraph: {
      title: pageTitle,
      description: description,
      url: `/novels/${novel.slug}`,
      siteName: siteName,
      images: imageUrl ? [{
          url: imageUrl,
          width: 1200,
          height: 630,
          alt: `‡∏õ‡∏Å‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${novel.title}`,
        }] : [],
      locale: "th_TH",
      type: "article",
      tags: novel.customTags || [],
      publishedTime: publishedTime,
      modifiedTime: modifiedTime,
      section: novel.mainThemeCategory?.name,
    },
    twitter: {
      card: "summary_large_image",
      title: pageTitle,
      description: description,
      images: imageUrl ? [{ url: imageUrl, alt: `‡∏õ‡∏Å‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${novel.title}` }] : [],
    },
  };
}

// --- Server Component ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ ---
export default async function NovelPage({ params }: NovelPageProps) {
  const { slug } = await params; // ‡∏£‡∏≠‡πÉ‡∏´‡πâ params ‡∏ñ‡∏π‡∏Å resolve
  const novel = await getNovelData(slug);

  if (!novel) {
    notFound(); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å notFound() ‡∏ñ‡πâ‡∏≤ getNovelData ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null
  }

  return (
    <div className="novel-detail-page container-custom mx-auto px-2 sm:px-4 py-6 md:py-8">
      <NovelHeader novel={novel} />
      <NovelTabs novel={novel} />
      {/*
        (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°) ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
        ‡∏ñ‡πâ‡∏≤ charactersList ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏¢‡∏Å
        {novel.charactersList && novel.charactersList.length > 0 && (
          <NovelCharactersSection characters={novel.charactersList} />
        )}
      */}
    </div>
  );
}
