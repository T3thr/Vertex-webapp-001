// app/novels/[slug]/overview/components/QuickActions.tsx
'use client';

import React from 'react';
import { motion } from 'framer-motion';
import { useRouter } from 'next/navigation';
import { 
  Plus, 
  Edit3, 
  Settings, 
  BarChart3, 
  Share2, 
  Download,
  Eye,
  BookOpen,
  Map
} from 'lucide-react';

interface QuickActionsProps {
  novelId: string;
  currentView: string;
}

/**
 * QuickActions - ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô
 * ‡∏£‡∏ß‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
 */
export default function QuickActions({ novelId, currentView }: QuickActionsProps) {
  const router = useRouter();

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á
  const handleViewChange = (view: string) => {
    const currentUrl = new URL(window.location.href);
    currentUrl.searchParams.set('view', view);
    router.push(currentUrl.toString());
  };

  // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á
  const viewOptions = [
    {
      key: 'flow',
      label: '‡πÅ‡∏ú‡∏ô‡∏ú‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á',
      icon: Map,
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á'
    },
    {
      key: 'episodes',
      label: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ô',
      icon: BookOpen,
      description: '‡∏™‡∏£‡πâ‡∏≤‡∏á ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ'
    },
    {
      key: 'analytics',
      label: '‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå',
      icon: BarChart3,
      description: '‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô'
    }
  ];

  // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
  const actionButtons = [
    {
      label: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà',
      icon: Plus,
      onClick: () => router.push(`/novels/${novelId}/episodes/new`),
      color: 'bg-primary hover:bg-primary-hover text-primary-foreground',
      description: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢'
    },
    {
      label: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢',
      icon: Edit3,
      onClick: () => router.push(`/novels/${novelId}/edit`),
      color: 'bg-accent hover:bg-accent/80 text-accent-foreground',
      description: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∑‡πà‡∏≠ ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠ ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ'
    },
    {
      label: '‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á',
      icon: Settings,
      onClick: () => router.push(`/novels/${novelId}/settings`),
      color: 'bg-secondary hover:bg-secondary/80 text-secondary-foreground',
      description: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î'
    },
    {
      label: '‡πÅ‡∏ä‡∏£‡πå',
      icon: Share2,
      onClick: () => {
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ä‡∏£‡πå
        if (navigator.share) {
          navigator.share({
            title: '‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô',
            url: window.location.href
          });
        } else {
          navigator.clipboard.writeText(window.location.href);
          // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
        }
      },
      color: 'bg-blue-500 hover:bg-blue-600 text-white',
      description: '‡πÅ‡∏ä‡∏£‡πå‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÜ'
    },
    {
      label: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î',
      icon: Download,
      onClick: () => {
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        console.log('‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢');
      },
      color: 'bg-green-500 hover:bg-green-600 text-white',
      description: '‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á'
    },
    {
      label: '‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á',
      icon: Eye,
      onClick: () => router.push(`/novels/${novelId}/preview`),
      color: 'bg-purple-500 hover:bg-purple-600 text-white',
      description: '‡∏î‡∏π‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏≠‡πà‡∏≤‡∏ô'
    }
  ];

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5, delay: 0.3 }}
      className="space-y-6"
    >
      {/* ‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á */}
      <div className="bg-card border border-border rounded-xl p-4">
        <h3 className="text-sm font-semibold text-foreground mb-4">
          ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
          {viewOptions.map((option, index) => (
            <motion.button
              key={option.key}
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.1 * index }}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onClick={() => handleViewChange(option.key)}
              className={`
                p-4 rounded-lg text-left transition-all duration-200
                ${currentView === option.key 
                  ? 'bg-primary text-primary-foreground shadow-md' 
                  : 'bg-secondary hover:bg-secondary/80 text-secondary-foreground'
                }
              `}
            >
              <div className="flex items-center gap-3 mb-2">
                <option.icon className="w-5 h-5" />
                <span className="font-medium">{option.label}</span>
              </div>
              <p className="text-xs opacity-80 leading-relaxed">
                {option.description}
              </p>
            </motion.button>
          ))}
        </div>
      </div>

      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô */}
      <div className="bg-card border border-border rounded-xl p-4">
        <h3 className="text-sm font-semibold text-foreground mb-4">
          ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡πà‡∏ß‡∏ô
        </h3>
        
        <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-3">
          {actionButtons.map((button, index) => (
            <motion.button
              key={button.label}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.1 * index }}
              whileHover={{ 
                scale: 1.05,
                transition: { duration: 0.2 }
              }}
              whileTap={{ scale: 0.95 }}
              onClick={button.onClick}
              className={`
                p-4 rounded-lg text-center transition-all duration-200 group
                ${button.color}
                hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2
              `}
              title={button.description}
            >
              <div className="flex flex-col items-center gap-2">
                <button.icon className="w-5 h-5 group-hover:scale-110 transition-transform" />
                <span className="text-xs font-medium leading-tight">
                  {button.label}
                </span>
              </div>
            </motion.button>
          ))}
        </div>
      </div>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.6 }}
        className="bg-gradient-to-r from-accent/20 to-primary/20 border border-border rounded-lg p-4"
      >
        <div className="flex items-center justify-between">
          <div>
            <h4 className="text-sm font-medium text-foreground mb-1">
              ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            </h4>
            <p className="text-xs text-muted-foreground">
              ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡∏ô‡∏ú‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </p>
          </div>
          <div className="text-2xl">üí°</div>
        </div>
      </motion.div>
    </motion.div>
  );
}