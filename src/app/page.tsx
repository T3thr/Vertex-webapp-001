// src/app/page.tsx
import { Suspense } from "react";
import { NovelCard, NovelCardData } from "@/components/NovelCard";
import Link from "next/link";
import { ImageSlider, SlideData as SliderSlideData } from "@/components/ImageSlider";
import {
  ArrowRight,
  TrendingUp,
  Sparkles, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏î‡πà‡∏ô/‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô
  CheckCircle, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß
  Clock, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  BookHeart, // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Visual Novel
  BookOpen, // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö fallback ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
  BadgePercent, // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞
} from "lucide-react";
import { Metadata } from 'next';
import { motion } from "framer-motion"; // Import framer-motion

export const metadata: Metadata = {
  title: 'NovelMaze - ‡∏Ñ‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏≤ ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÇ‡∏ô‡πÄ‡∏ß‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡πâ',
  description: '‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÅ‡∏ä‡∏ó ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÇ‡∏ô‡πÄ‡∏ß‡∏•‡πÅ‡∏ö‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏Ñ‡∏ó‡∏µ‡∏ü ‡∏ó‡∏µ‡πà NovelMaze',
}

const API_URL = process.env.NEXT_PUBLIC_API_URL || "http://localhost:3000";

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏à‡∏≤‡∏Å API
 */
async function getNovels(
  filter: string,
  limit: number = 7, // Fetch 1 more than display limit to check for "View All"
  novelType?: string // 'visual-novel' ‡∏´‡∏£‡∏∑‡∏≠ undefined
): Promise<{ novels: NovelCardData[], total: number }> {
  try {
    const params = new URLSearchParams({
      limit: limit.toString(),
      filter,
    });
    if (novelType) {
      params.append("novelType", novelType); // novelType parameter ‡πÉ‡∏ô API
    }

    const url = `${API_URL}/api/novels?${params.toString()}`;
    console.log(`üìû [HomePage] Fetching novels from: ${url}`);

    const res = await fetch(url, {
      next: { revalidate: 300 }, // ISR: 5 ‡∏ô‡∏≤‡∏ó‡∏µ
    });

    if (!res.ok) {
      const errorData = await res.json().catch(() => ({ message: "Unknown error", details: "Response not JSON" }));
      console.error(`‚ùå [HomePage] Failed to fetch novels for filter: ${filter}, novelType: ${novelType} (HTTP ${res.status})`, errorData);
      return { novels: [], total: 0 };
    }

    const data = await res.json();
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤ data.novels ‡πÄ‡∏õ‡πá‡∏ô array
    const fetchedNovels = Array.isArray(data.novels) ? data.novels : [];
    const totalNovels = data.pagination?.total || 0;
    console.log(`‚úÖ [HomePage] Received ${fetchedNovels.length} novels (total: ${totalNovels}) for filter: ${filter}, novelType: ${novelType}`);

    return { novels: fetchedNovels, total: totalNovels };
  } catch (error: any) {
    console.error(`‚ùå [HomePage] Error fetching novels for ${filter}, novelType: ${novelType}:`, error.message, error.stack);
    return { novels: [], total: 0 };
  }
}

/**
 * ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏™‡πà‡∏ß‡∏ô (Section Title)
 */
function SectionTitle({ icon, title, description }: { icon: React.ReactNode; title: string; description?: string }) {
  return (
    <div className="flex items-center gap-2.5 md:gap-3">
      {/* Icon Styling ‡∏ï‡∏≤‡∏° Figma: ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏°‡∏ô‡πÜ ‡∏°‡∏µ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏≠‡πà‡∏≠‡∏ô‡πÜ ‡∏Ç‡∏≠‡∏á primary */}
      <div className="text-primary p-1.5 bg-primary/10 rounded-md shadow-sm">
        {icon} {/* Lucide icon ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ */}
      </div>
      <div>
        {/* Title Styling ‡∏ï‡∏≤‡∏° Figma: ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤ ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà */}
        <h2 className="text-xl sm:text-2xl font-bold text-foreground">{title}</h2>
        {/* Description Styling ‡∏ï‡∏≤‡∏° Figma: ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å ‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ */}
        {description && <p className="text-xs sm:text-sm text-muted-foreground mt-0.5">{description}</p>}
      </div>
    </div>
  );
}

/**
 * ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå Skeleton ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
 * ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î (count) ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î ‡∏Ñ‡∏ß‡∏£‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö NovelRow ‡πÅ‡∏•‡∏∞ Figma
 */
function NovelRowSkeleton({ count = 6 }: { count?: number }) {
  // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô NovelRow ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á
  const cardWidths = "w-[164px] sm:w-[175px] md:w-[190px] lg:w-[210px]";
  return (
    <div className={`flex space-x-3 sm:space-x-3.5 overflow-hidden py-1`}> {/* py-1 ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô NovelRow */}
      {Array.from({ length: count }).map((_, i) => (
        <div key={i} className={`animate-pulse flex-shrink-0 ${cardWidths}`}>
          {/* ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Skeleton Card ‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ NovelCard */}
          <div className="bg-card rounded-lg md:rounded-xl shadow-sm overflow-hidden h-full">
            {/* Image Placeholder */}
            <div className="aspect-[2/3.1] w-full bg-secondary rounded-t-lg md:rounded-t-xl"></div> {/* aspect-ratio ‡∏ï‡∏≤‡∏° NovelCard */}
            {/* Content Placeholder */}
            <div className="p-2 md:p-2.5 text-xs"> {/* padding ‡πÅ‡∏•‡∏∞ text size ‡∏ï‡∏≤‡∏° NovelCard */}
              <div className="h-3 bg-secondary rounded w-3/4 mb-1"></div> {/* Genre Tag */}
              <div className="h-5 bg-secondary rounded w-full mb-1.5"></div> {/* Title Line 1 */}
              <div className="h-5 bg-secondary rounded w-5/6 mb-1.5"></div> {/* Title Line 2 */}
              <div className="h-3 bg-secondary rounded w-full mb-1"></div>   {/* Synopsis Line 1 */}
              <div className="h-3 bg-secondary rounded w-5/6 mb-2"></div>   {/* Synopsis Line 2 */}
              {/* Stats Placeholder */}
              <div className="mt-auto pt-1.5 border-t border-border/30"> {/* border-border/30 ‡∏ï‡∏≤‡∏° NovelCard */}
                <div className="grid grid-cols-3 gap-x-1 mb-1">
                    <div className="h-2.5 bg-secondary rounded w-full"></div>
                    <div className="h-2.5 bg-secondary rounded w-full"></div>
                    <div className="h-2.5 bg-secondary rounded w-full"></div>
                </div>
                <div className="h-2 bg-secondary rounded w-1/2"></div> {/* Updated at */}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}


/**
 * ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ (‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡πÑ‡∏î‡πâ)
 * ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ responsive ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ styling ‡∏ï‡∏≤‡∏° Figma
 */
function NovelRow({ novelsData, filterKey, cardDisplayLimit = 6 }: { novelsData: { novels: NovelCardData[], total: number }; filterKey: string; cardDisplayLimit?: number }) {
  const { novels, total } = novelsData;

  // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà fix ‡πÑ‡∏ß‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡∏ï‡∏≤‡∏° breakpoints ‡πÅ‡∏•‡∏∞‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö Figma
  const cardWidths = "w-[164px] sm:w-[175px] md:w-[190px] lg:w-[210px]";
  // Aspect ratio ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
  const imageAspectRatio = "aspect-[2/3.1]"; // ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö Figma ‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏î‡∏π‡∏™‡∏π‡∏á

  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏•‡∏¢ (‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å API ‡πÅ‡∏•‡∏∞ total ‡πÄ‡∏õ‡πá‡∏ô 0)
  if (!novels || novels.length === 0) {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢" - styling ‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    return (
      <div className="text-center text-muted-foreground py-8 md:py-10 col-span-full flex flex-col items-center justify-center min-h-[300px] bg-secondary/30 rounded-lg my-2"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° my-2 */}
        <BookOpen size={36} className="mx-auto mb-2 text-primary/50" /> {/* Icon ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô, ‡∏™‡∏µ‡∏≠‡πà‡∏≠‡∏ô‡∏•‡∏á */}
        <p className="font-semibold text-base">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏ô‡∏µ‡πâ</p>
        <p className="text-sm">‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ô‡∏∞</p>
      </div>
    );
  }

  // ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ï‡∏≤‡∏° cardDisplayLimit
  const novelsToShow = novels.slice(0, cardDisplayLimit);
  // "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ total (‡∏à‡∏≤‡∏Å API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö filter ‡∏ô‡∏µ‡πâ) > ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß
  const showViewAll = total > novelsToShow.length && novelsToShow.length > 0;

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
  const filterParam = filterKey.split('-')[0]; // 'trending', 'published', 'promoted', 'completed'
  const novelTypeParam = filterKey.includes('visual-novel') ? '&novelType=visual-novel' : '';
  const viewAllUrl = `/novels?filter=${filterParam}${novelTypeParam}`;


  return (
    // Container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ñ‡∏ß‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
    // Tailwind classes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scrollbar (‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á config plugin ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥)
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° -mx-1 px-1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ shadow ‡∏Ç‡∏≠‡∏á card ‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞ view all ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡∏î
    <div className="flex overflow-x-auto space-x-3 sm:space-x-3.5 pb-3.5 -mb-3.5 scrollbar-thin scrollbar-thumb-primary/40 scrollbar-track-secondary/30 hover:scrollbar-thumb-primary/60 active:scrollbar-thumb-primary/80 rounded-md py-1.5 -mx-1 px-1"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° py-1.5 */}
      {novelsToShow.map((novel, index) => (
        <NovelCard
          key={`${filterKey}-${novel._id}-${index}`} // ‡πÉ‡∏ä‡πâ novel._id ‡πÄ‡∏û‡∏∑‡πà‡∏≠ key ‡∏ó‡∏µ‡πà stable ‡∏Å‡∏ß‡πà‡∏≤ slug
          novel={novel}
          priority={index < 3} // ‡πÉ‡∏´‡πâ priority ‡∏Å‡∏±‡∏ö 2-3 ‡∏Å‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏£‡∏Å (‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ö‡∏ô‡∏à‡∏≠)
          className={`${cardWidths} h-full`} // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î width ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏™‡∏π‡∏á‡πÄ‡∏ï‡πá‡∏° container (h-full)
          imageClassName={imageAspectRatio} // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î aspect ratio ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        />
      ))}
      {/* ‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" */}
      {showViewAll && (
        <Link
          href={viewAllUrl}
          className={`${cardWidths} ${imageAspectRatio} flex-shrink-0 h-full bg-card/70 hover:bg-card rounded-lg md:rounded-xl shadow-md hover:shadow-lg flex flex-col items-center justify-center text-center group transition-all duration-200 ease-in-out border-2 border-dashed border-primary/40 hover:border-primary focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background`}
          // ‡πÉ‡∏ä‡πâ aspect ratio ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö NovelCard
        >
          <ArrowRight size={28} className="text-primary mb-1.5 transition-transform duration-200 group-hover:translate-x-1 h-7 w-7" /> {/* Icon ‡πÉ‡∏´‡∏ç‡πà‡∏Ç‡∏∂‡πâ‡∏ô */}
          <span className="font-semibold text-sm text-primary">‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
          <span className="text-xs text-muted-foreground">({total.toLocaleString()} ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á)</span>
        </Link>
      )}
    </div>
  );
}

/**
 * ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡πÅ‡∏™‡∏î‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÅ‡∏ñ‡∏ß‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô (‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Suspense ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô)
 */
async function SectionRenderer({
  title,
  description,
  icon,
  filter,
  novelType, // 'visual-novel' ‡∏´‡∏£‡∏∑‡∏≠ undefined
  displayLimit = 6,
  fetchLimit = 7,
  sectionKey // key ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Suspense ‡πÅ‡∏•‡∏∞ NovelRow
}: {
  title: string;
  description?: string;
  icon: React.ReactNode;
  filter: string;
  novelType?: string;
  displayLimit?: number;
  fetchLimit?: number;
  sectionKey: string;
}) {
  // Fetch data ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô Server Component ‡∏ô‡∏µ‡πâ
  const novelsData = await getNovels(filter, fetchLimit, novelType);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡∏ó‡∏µ‡πà header ‡∏Ç‡∏≠‡∏á section
  const filterParam = filter.split('-')[0];
  const novelTypeParamForLink = novelType ? `&novelType=${novelType}` : '';
  const viewAllUrlPath = `/novels?filter=${filterParam}${novelTypeParamForLink}`;

  return (
    <section className="mb-8 md:mb-12"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° margin bottom ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á section */}
      {/* Header ‡∏Ç‡∏≠‡∏á Section */}
      <div className="flex justify-between items-center mb-3 md:mb-4"> {/* ‡∏•‡∏î margin bottom ‡∏Ç‡∏≠‡∏á header */}
        <SectionTitle icon={icon} title={title} description={description} />
        {/* ‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á */}
        {(novelsData.total > 0 && novelsData.novels.length > 0 && novelsData.total > displayLimit) && (
            <Link
                href={viewAllUrlPath}
                className="flex items-center gap-1 text-sm sm:text-base text-primary font-semibold hover:text-primary/80 transition-colors whitespace-nowrap group" // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î font
            >
                <span>‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                <ArrowRight size={16} className="transition-transform duration-300 group-hover:translate-x-0.5 h-4 w-4" /> {/* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î icon */}
            </Link>
        )}
      </div>
      {/* ‡πÅ‡∏ñ‡∏ß‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ */}
      <NovelRow novelsData={novelsData} filterKey={sectionKey} cardDisplayLimit={displayLimit} />
    </section>
  );
}


/**
 * ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå
 */
export default async function HomePage() {
  // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ImageSlider (Banner) - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞ responsive
  const imageSlideData: SliderSlideData[] = [
    {
      id: "vn-discovery-slide",
      title: "‡πÇ‡∏•‡∏Å‡πÉ‡∏ö‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô Visual Novel",
      description: "‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏°‡∏´‡∏≤‡∏Å‡∏≤‡∏û‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏•‡∏¥‡∏Ç‡∏¥‡∏ï",
      imageUrl: "/images/featured/banner-vn-world.webp", // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏•‡∏Å‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏ç‡πà‡πÅ‡∏•‡∏∞‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö Visual Novel
      link: "/novels?novelType=visual-novel&filter=trending", // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ VN ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á
      category: "Visual Novels", // ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô‡∏™‡πÑ‡∏•‡∏î‡πå
      highlightColor: "bg-purple-600", // ‡∏™‡∏µ‡πÑ‡∏Æ‡πÑ‡∏•‡∏ó‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà (Tailwind class)
      primaryAction: { label: "‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÇ‡∏ô‡πÄ‡∏ß‡∏•", href: "/novels?novelType=visual-novel&filter=trending" },
    },
    {
      id: "epic-adventure-awaits",
      title: "‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡∏£‡∏±‡∏Å‡∏Ç‡πâ‡∏≤‡∏°‡∏†‡∏û", // ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
      description: "‡πÇ‡∏ä‡∏Ñ‡∏ä‡∏∞‡∏ï‡∏≤ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏¢‡∏¥‡πà‡∏á‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏ô‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏´‡∏•‡∏±‡∏ö‡πÉ‡∏´‡∏• ‡∏£‡∏≠‡∏Ñ‡∏∏‡∏ì‡∏°‡∏≤‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™",
      imageUrl: "/images/featured/banner-fantasy-romance.webp", // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏ß‡∏£‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏™‡∏∑‡πà‡∏≠‡∏ñ‡∏∂‡∏á‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å
      link: "/novels/love-across-dimensions", // ‡∏™‡∏°‡∏°‡∏ï‡∏¥ slug ‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏î‡πà‡∏ô
      category: "‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ï‡∏¥‡∏Å‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ",
      highlightColor: "bg-rose-600",
      primaryAction: { label: "‡∏≠‡πà‡∏≤‡∏ô‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡∏£‡∏±‡∏Å", href: "/novels/love-across-dimensions" },
    },
    {
      id: "author-spotlight-promo",
      title: "‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡πÅ‡∏£‡∏á ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡πÑ‡∏°‡πà‡∏´‡∏¢‡∏∏‡∏î",
      description: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏î‡∏≤‡∏ß‡∏£‡∏∏‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô NovelMaze ‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞",
      imageUrl: "/images/featured/banner-new-authors.webp", // ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô
      link: "/authors", // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏ß‡∏°‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏î‡πà‡∏ô
      category: "‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°",
      highlightColor: "bg-teal-600",
      primaryAction: { label: "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô", href: "/authors" },
    },
  ];

  // ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà)
  const sectionsConfig = [
    {
      key: "trending-vn", // Key ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Visual Novel ‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°
      title: "Visual Novel ‡∏¢‡∏≠‡∏î‡∏Æ‡∏¥‡∏ï",
      description: "‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÇ‡∏ô‡πÄ‡∏ß‡∏•‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏Ñ‡∏ó‡∏µ‡∏ü‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏≤‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏à‡∏ô‡∏±‡∏Å‡∏≠‡πà‡∏≤‡∏ô",
      icon: <BookHeart className="h-6 w-6 text-primary" />, // ‡πÉ‡∏ä‡πâ lucide icon ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î
      filter: "trending",
      novelType: "visual-novel", // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Visual Novel
      displayLimit: 6, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß
      fetchLimit: 7,   // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà fetch (displayLimit + 1 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ "‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    },
    {
      key: "trending-all",
      title: "‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°",
      description: "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Æ‡∏¥‡∏ï‡∏ï‡∏¥‡∏î‡∏•‡∏°‡∏ö‡∏ô ‡∏Ñ‡∏£‡∏≠‡∏á‡πÉ‡∏à‡∏ô‡∏±‡∏Å‡∏≠‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°",
      icon: <TrendingUp className="h-6 w-6 text-primary" />,
      filter: "trending",
      displayLimit: 6,
      fetchLimit: 7,
    },
    {
      key: "new-releases",
      title: "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î",
      description: "‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡∏™‡∏î‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô ‡∏´‡πâ‡∏≤‡∏°‡∏û‡∏•‡∏≤‡∏î!",
      icon: <Clock className="h-6 w-6 text-primary" />,
      filter: "published", // "published" ‡∏Ñ‡∏∑‡∏≠‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏≠‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
      displayLimit: 6,
      fetchLimit: 7,
    },
    {
      key: "promoted-deals", // Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏î‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô
      title: "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏î‡πà‡∏ô & ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô", // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà
      description: "‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Ñ‡∏±‡∏î‡∏™‡∏£‡∏£ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ö‡∏Ñ‡∏ß‡πâ‡∏≤",
      icon: <BadgePercent className="h-6 w-6 text-primary" />, // ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î/‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô
      filter: "promoted", // filter "promoted" ‡πÉ‡∏ô API ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏ó‡∏±‡πâ‡∏á isFeatured ‡πÅ‡∏•‡∏∞ activePromotion
      displayLimit: 6,
      fetchLimit: 7,
    },
    {
      key: "completed-stories",
      title: "‡∏≠‡πà‡∏≤‡∏ô‡∏£‡∏ß‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏à‡∏ö",
      description: "‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏à‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ô‡∏∏‡∏Å‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏∞‡∏î‡∏∏‡∏î ‡∏°‡∏±‡∏ô‡∏™‡πå‡∏Ñ‡∏£‡∏ö‡∏£‡∏™",
      icon: <CheckCircle className="h-6 w-6 text-primary" />,
      filter: "completed",
      displayLimit: 6,
      fetchLimit: 7,
    },
  ];

  return (
    <div className="bg-background text-foreground min-h-screen"> {/* ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ CSS ‡∏à‡∏≤‡∏Å globals.css */}
      <main className="pb-10 md:pb-16"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° padding bottom */}
        {/* ‡∏™‡πà‡∏ß‡∏ô Banner Image Slider */}
        <section className="w-full mb-8 md:mb-12 xl:mb-16 relative"> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏° margin bottom ‡πÉ‡∏´‡πâ ImageSlider */}
          <ImageSlider slides={imageSlideData} />
        </section>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
        <div className="container-custom space-y-8 md:space-y-12"> {/* ‡πÉ‡∏ä‡πâ space-y ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á sections */}
          {sectionsConfig.map((section) => (
            <Suspense key={section.key} fallback={<NovelRowSkeleton count={section.displayLimit}/>}>
              <SectionRenderer
                sectionKey={section.key}
                title={section.title}
                description={section.description}
                icon={section.icon}
                filter={section.filter}
                novelType={section.novelType}
                displayLimit={section.displayLimit}
                fetchLimit={section.fetchLimit}
              />
            </Suspense>
          ))}
        </div>
      </main>
    </div>
  );
}