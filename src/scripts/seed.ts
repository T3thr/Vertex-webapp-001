#!/usr/bin/env ts-node

import { config } from 'dotenv';
import dbConnect from '../backend/lib/mongodb';
import { seedNovelData } from '../data/seed-novel-data';
import NovelModel from '../backend/models/Novel';
import EpisodeModel from '../backend/models/Episode';
import SceneModel from '../backend/models/Scene';
import ChoiceModel from '../backend/models/Choice';
import CharacterModel from '../backend/models/Character';

// ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
config({ path: '.env' });
config({ path: '.env.local' });

const main = async () => {
  try {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Seed Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö DivWy');
    console.log('================================================');

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
    const requiredEnvVars = ['MONGODB_URI', 'AUTHOR_USERNAME'];
    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missingVars.length > 0) {
      console.error('‚ùå ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏≤‡∏¢‡πÑ‡∏õ:', missingVars.join(', '));
      console.log('üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env:');
      console.log(`MONGODB_URI=mongodb://localhost:27017/divwy`);
      console.log(`AUTHOR_USERNAME=your_author_username`);
      console.log(`DB_NAME=DivWy`);
      process.exit(1);
    }

    console.log(`üìç MongoDB URI: ${process.env.MONGODB_URI}`);
    console.log(`üìÅ Database Name: ${process.env.DB_NAME || 'default_db'}`);
    console.log(`üë§ Author Username: ${process.env.AUTHOR_USERNAME}`);
    console.log('');

    // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ mongodb.ts config
    console.log('üîå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡πà‡∏≤‡∏ô mongodb.ts...');
    await dbConnect();
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('');

    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏∞ seed
    const novelTitlesToDelete = ['Now or Never', 'The Chosen One'];
    console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏ö: ${novelTitlesToDelete.join(', ')}...`);

    const novelsToDelete = await NovelModel.find({ title: { $in: novelTitlesToDelete } }).select('_id');
    const novelIdsToDelete = novelsToDelete.map(n => n._id);

    if (novelIdsToDelete.length > 0) {
      console.log(`‚ÑπÔ∏è  ‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ ${novelIdsToDelete.length} ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á`);

      // ‡∏•‡∏ö Episodes ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Episodes ‡πÄ‡∏Å‡πà‡∏≤...');
      const episodeResult = await EpisodeModel.deleteMany({ novelId: { $in: novelIdsToDelete } });
      console.log(`‚úÖ  ‡∏•‡∏ö ${episodeResult.deletedCount} episodes ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);

      // ‡∏•‡∏ö Scenes ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Scenes ‡πÄ‡∏Å‡πà‡∏≤...');
      const sceneResult = await SceneModel.deleteMany({ novelId: { $in: novelIdsToDelete } });
      console.log(`‚úÖ  ‡∏•‡∏ö ${sceneResult.deletedCount} scenes ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);

      // ‡∏•‡∏ö Choices ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Choices ‡πÄ‡∏Å‡πà‡∏≤...');
      const choiceResult = await ChoiceModel.deleteMany({ novelId: { $in: novelIdsToDelete } });
      console.log(`‚úÖ  ‡∏•‡∏ö ${choiceResult.deletedCount} choices ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);

      // ‡∏•‡∏ö Characters ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
      console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Characters ‡πÄ‡∏Å‡πà‡∏≤...');
      const characterResult = await CharacterModel.deleteMany({ novelId: { $in: novelIdsToDelete } });
      console.log(`‚úÖ  ‡∏•‡∏ö ${characterResult.deletedCount} characters ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
      
      // ‡∏•‡∏ö Novels ‡πÄ‡∏≠‡∏á
      console.log('üóëÔ∏è  ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö Novels...');
      const novelResult = await NovelModel.deleteMany({ _id: { $in: novelIdsToDelete } });
      console.log(`‚úÖ  ‡∏•‡∏ö ${novelResult.deletedCount} ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);

    } else {
      console.log('‚ÑπÔ∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏ö');
    }
    console.log('');

    // ‡∏£‡∏±‡∏ô seed data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
    console.log('üìö ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏à‡∏≥‡∏•‡∏≠‡∏á...');
    await seedNovelData();

    console.log('');
    console.log('üéâ Seed Script ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('================================================');

  } catch (error) {
    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    process.exit(1);
  } finally {
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const mongoose = (await import('mongoose')).default;
    await mongoose.disconnect();
    console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß');
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ main function
main(); 