// src/components/ui/ErrorBoundary.tsx
// Error Boundary Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ JavaScript Errors ‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö Component
// ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Fallback UI ‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞ Error Reporting
'use client';

import React, { Component, ErrorInfo, ReactNode } from 'react';
import { motion } from 'framer-motion';
import { 
  AlertTriangle, 
  RefreshCw, 
  Home, 
  Bug, 
  Mail,
  ArrowLeft,
  Shield,
  Zap
} from 'lucide-react';

interface ErrorBoundaryState {
  hasError: boolean;
  error: Error | null;
  errorInfo: ErrorInfo | null;
  errorId: string;
}

interface ErrorBoundaryProps {
  children: ReactNode;
  fallback?: ReactNode;
  onError?: (error: Error, errorInfo: ErrorInfo) => void;
  showReportButton?: boolean;
  showReloadButton?: boolean;
  showHomeButton?: boolean;
  className?: string;
}

export default class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {
  constructor(props: ErrorBoundaryProps) {
    super(props);

    this.state = {
      hasError: false,
      error: null,
      errorInfo: null,
      errorId: this.generateErrorId()
    };
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Error ID ‡∏ó‡∏µ‡πà unique ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ tracking
  private generateErrorId(): string {
    return `err_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }

  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {
    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï state ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á fallback UI
    return {
      hasError: true,
      error: error
    };
  }

  componentDidCatch(error: Error, errorInfo: ErrorInfo) {
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• error ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£ debug
    console.error('üö® [ErrorBoundary] ‡∏à‡∏±‡∏ö Error ‡πÑ‡∏î‡πâ:', error);
    console.error('üö® [ErrorBoundary] Error Info:', errorInfo);

    this.setState({
      error: error,
      errorInfo: errorInfo,
      errorId: this.generateErrorId()
    });

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å callback function ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if (this.props.onError) {
      this.props.onError(error, errorInfo);
    }

    // ‡∏™‡πà‡∏á error report ‡πÑ‡∏õ‡∏¢‡∏±‡∏á service external (‡πÄ‡∏ä‡πà‡∏ô Sentry, LogRocket)
    this.reportError(error, errorInfo);
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á error report
  private reportError = async (error: Error, errorInfo: ErrorInfo) => {
    try {
      // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• error ‡πÑ‡∏õ‡∏¢‡∏±‡∏á API endpoint
      const errorData = {
        errorId: this.state.errorId,
        message: error.message,
        stack: error.stack,
        componentStack: errorInfo.componentStack,
        timestamp: new Date().toISOString(),
        userAgent: navigator.userAgent,
        url: window.location.href
      };

      // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á error reporting service
      // await fetch('/api/error-report', {
      //   method: 'POST',
      //   headers: { 'Content-Type': 'application/json' },
      //   body: JSON.stringify(errorData)
      // });

      console.log('üìä [ErrorBoundary] Error Report Data:', errorData);
    } catch (reportingError) {
      console.error('‚ùå [ErrorBoundary] ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á Error Report ‡πÑ‡∏î‡πâ:', reportingError);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Error Boundary
  private handleRetry = () => {
    this.setState({
      hasError: false,
      error: null,
      errorInfo: null,
      errorId: this.generateErrorId()
    });
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö reload ‡∏´‡∏ô‡πâ‡∏≤
  private handleReload = () => {
    window.location.reload();
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
  private handleGoHome = () => {
    window.location.href = '/';
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö copy error details
  private handleCopyError = async () => {
    const errorText = `
Error ID: ${this.state.errorId}
Message: ${this.state.error?.message}
Stack: ${this.state.error?.stack}
Component Stack: ${this.state.errorInfo?.componentStack}
Timestamp: ${new Date().toISOString()}
URL: ${window.location.href}
    `.trim();

    try {
      await navigator.clipboard.writeText(errorText);
      alert('‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Error ‡πÅ‡∏•‡πâ‡∏ß');
    } catch (err) {
      console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏î‡πâ:', err);
    }
  };

  render() {
    const { 
      children, 
      fallback, 
      showReportButton = true, 
      showReloadButton = true, 
      showHomeButton = true,
      className = ''
    } = this.props;

    if (this.state.hasError) {
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ custom fallback ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ
      if (fallback) {
        return fallback;
      }

      // Fallback UI ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
      return (
        <div className={`min-h-screen bg-background text-foreground flex items-center justify-center p-4 ${className}`}>
          <motion.div
            className="max-w-2xl w-full"
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5 }}
          >
            {/* Error Card */}
            <motion.div
              className="bg-card border border-border rounded-2xl p-8 shadow-xl"
              initial={{ scale: 0.9 }}
              animate={{ scale: 1 }}
              transition={{ delay: 0.2, type: "spring", stiffness: 300 }}
            >
              {/* Error Icon & Header */}
              <motion.div
                className="flex items-center justify-center mb-6"
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                transition={{ delay: 0.3, type: "spring", stiffness: 400 }}
              >
                <div className="relative">
                  <div className="w-20 h-20 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center">
                    <AlertTriangle className="w-10 h-10 text-red-500" />
                  </div>
                  <motion.div
                    className="absolute inset-0 border-2 border-red-200 dark:border-red-800 rounded-full"
                    animate={{ scale: [1, 1.1, 1] }}
                    transition={{ duration: 2, repeat: Infinity }}
                  />
                </div>
              </motion.div>

              {/* Error Title */}
              <motion.h1
                className="text-3xl font-bold text-card-foreground text-center mb-4"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.4 }}
              >
                ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î
              </motion.h1>

              {/* Error Description */}
              <motion.p
                className="text-muted-foreground text-center mb-6 leading-relaxed"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 0.5 }}
              >
                ‡πÄ‡∏£‡∏≤‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì 
                ‡∏ó‡∏µ‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
              </motion.p>

              {/* Error ID */}
              <motion.div
                className="bg-secondary/50 rounded-lg p-4 mb-6"
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.6 }}
              >
                <div className="flex items-center gap-2 mb-2">
                  <Bug className="w-4 h-4 text-muted-foreground" />
                  <span className="text-sm font-medium text-secondary-foreground">Error ID</span>
                </div>
                <code className="text-xs text-muted-foreground font-mono bg-background px-2 py-1 rounded">
                  {this.state.errorId}
                </code>
              </motion.div>

              {/* Error Details (Development Mode) */}
              {process.env.NODE_ENV === 'development' && this.state.error && (
                <motion.div
                  className="bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded-lg p-4 mb-6"
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  transition={{ delay: 0.7 }}
                >
                  <h3 className="text-sm font-semibold text-red-700 dark:text-red-400 mb-2 flex items-center gap-2">
                    <Shield className="w-4 h-4" />
                    Development Error Details
                  </h3>
                  <pre className="text-xs text-red-600 dark:text-red-300 overflow-x-auto whitespace-pre-wrap">
                    {this.state.error.message}
                  </pre>
                  <button
                    onClick={this.handleCopyError}
                    className="mt-2 text-xs text-red-500 hover:text-red-700 underline transition-colors"
                  >
                    ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Error ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                  </button>
                </motion.div>
              )}

              {/* Action Buttons */}
              <motion.div
                className="flex flex-col sm:flex-row gap-3"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.8 }}
              >
                {/* Retry Button */}
                <motion.button
                  onClick={this.handleRetry}
                  className="flex-1 bg-primary text-primary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-primary-hover transition-colors flex items-center justify-center gap-2"
                  whileHover={{ scale: 1.02 }}
                  whileTap={{ scale: 0.98 }}
                >
                  <RefreshCw className="w-5 h-5" />
                  ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                </motion.button>

                {/* Reload Button */}
                {showReloadButton && (
                  <motion.button
                    onClick={this.handleReload}
                    className="flex-1 bg-secondary text-secondary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-accent hover:text-accent-foreground transition-colors flex items-center justify-center gap-2"
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <Zap className="w-5 h-5" />
                    ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
                  </motion.button>
                )}

                {/* Home Button */}
                {showHomeButton && (
                  <motion.button
                    onClick={this.handleGoHome}
                    className="flex-1 bg-secondary text-secondary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-accent hover:text-accent-foreground transition-colors flex items-center justify-center gap-2"
                    whileHover={{ scale: 1.02 }}
                    whileTap={{ scale: 0.98 }}
                  >
                    <Home className="w-5 h-5" />
                    ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
                  </motion.button>
                )}
              </motion.div>

              {/* Report Bug Button */}
              {showReportButton && (
                <motion.div
                  className="mt-6 pt-6 border-t border-border"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 1 }}
                >
                  <p className="text-center text-sm text-muted-foreground mb-3">
                    ‡∏´‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ó‡∏£‡∏≤‡∏ö‡πÑ‡∏î‡πâ
                  </p>
                  <motion.button
                    onClick={() => {
                      // ‡πÄ‡∏õ‡∏¥‡∏î modal ‡∏´‡∏£‡∏∑‡∏≠ redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ report bug
                      window.open(`mailto:support@novelmaze.com?subject=Bug Report - ${this.state.errorId}&body=Error ID: ${this.state.errorId}%0D%0A%0D%0APlease describe what you were doing when this error occurred:`);
                    }}
                    className="w-full bg-accent/10 text-accent-foreground border border-accent/20 px-4 py-2 rounded-lg text-sm font-medium hover:bg-accent/20 transition-colors flex items-center justify-center gap-2"
                    whileHover={{ scale: 1.01 }}
                    whileTap={{ scale: 0.99 }}
                  >
                    <Mail className="w-4 h-4" />
                    ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡∏°‡∏û‡∏±‡∏í‡∏ô‡∏≤
                  </motion.button>
                </motion.div>
              )}
            </motion.div>
          </motion.div>
        </div>
      );
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ error ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á children ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥
    return children;
  }
}

// Higher Order Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö wrap component ‡∏î‡πâ‡∏ß‡∏¢ ErrorBoundary
export function withErrorBoundary<P extends object>(
  Component: React.ComponentType<P>,
  errorBoundaryProps?: Omit<ErrorBoundaryProps, 'children'>
) {
  const WrappedComponent = (props: P) => (
    <ErrorBoundary {...errorBoundaryProps}>
      <Component {...props} />
    </ErrorBoundary>
  );

  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;
  return WrappedComponent;
}

// Hook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error ‡πÉ‡∏ô functional components
export function useErrorHandler() {
  const throwError = (error: Error) => {
    throw error;
  };

  const handleAsyncError = (promise: Promise<any>) => {
    promise.catch(throwError);
  };

  return { throwError, handleAsyncError };
}