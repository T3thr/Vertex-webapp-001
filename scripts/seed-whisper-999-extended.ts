// scripts/seed-whisper-999-extended.ts
// ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° ending scenes ‡πÅ‡∏•‡∏∞ story map - TypeScript version

import mongoose from 'mongoose';
import bcrypt from 'bcryptjs';
import { v4 as uuidv4 } from 'uuid';
import dbConnect from '../src/backend/lib/mongodb.js';

// Import Models - ‡πÉ‡∏ä‡πâ ES6 imports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö TypeScript
import NovelModel from '../src/backend/models/Novel';
import EpisodeModel from '../src/backend/models/Episode';
import SceneModel from '../src/backend/models/Scene';
import CharacterModel from '../src/backend/models/Character';
import ChoiceModel from '../src/backend/models/Choice';
import UserModel from '../src/backend/models/User';
import CategoryModel, { CategoryType } from '../src/backend/models/Category';
import StoryMapModel, { StoryMapNodeType, StoryVariableDataType } from '../src/backend/models/StoryMap';

import { config } from 'dotenv';
config();

const AUTHOR_USERNAME = process.env.AUTHOR_USERNAME || 'whisper_author';

// ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏•‡∏±‡∏Å
const findOrCreateCategory = async (name: string, type: CategoryType, slug: string): Promise<mongoose.Types.ObjectId> => {
  let category = await CategoryModel.findOne({ slug, categoryType: type });
  if (!category) {
    category = await CategoryModel.findOne({ name, categoryType: type });
  }
  if (!category) {
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà: "${name}" (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${type})`);
    category = new CategoryModel({
      name,
      slug,
      categoryType: type,
      description: `‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${name}`,
      visibility: 'PUBLIC',
      isSystemDefined: true,
      isActive: true,
    });
    await category.save();
  }
  return category._id;
};

const findOrCreateAuthor = async (): Promise<mongoose.Types.ObjectId> => {
  console.log('üë§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á...');
  let author = await UserModel.findOne({ username: AUTHOR_USERNAME });
  if (!author) {
    const hashedPassword = await bcrypt.hash('password123', 12);
    author = new UserModel({
      username: AUTHOR_USERNAME,
      email: `${AUTHOR_USERNAME}@example.com`,
      password: hashedPassword,
      accounts: [{
        provider: 'credentials',
        providerAccountId: AUTHOR_USERNAME,
        type: 'credentials'
      }],
      roles: ['Writer'],
      primaryPenName: '‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö',
      avatarUrl: '/images/default-avatar.png',
      isEmailVerified: true,
      isActive: true,
      isBanned: false,
      isDeleted: false
    });
    await author.save();
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${author.username}`);
  }
  return author._id;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ending scenes
 */
const createAllChoices = async (novelId: mongoose.Types.ObjectId, authorId: mongoose.Types.ObjectId) => {
  console.log('üéØ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');
  
  const choices = [
    // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_EXPLORE',
      text: '‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_explore_downstairs_1' } }],
      isMajorChoice: true,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_CLEAN',
      text: '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πâ‡∏≤‡∏°‡πà‡∏≤‡∏ô',
      actions: [{
        actionId: uuidv4(),
        type: 'END_NOVEL_BRANCH',
        parameters: {
          endingNodeId: 'ENDING_SAFE_DAY1',
          outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏∏‡∏Ç‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å... ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡πá‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ',
          endingTitle: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏ô‡∏™‡∏á‡∏ö',
          endingType: 'NORMAL'
        }
      }],
      isMajorChoice: true,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_CALL',
      text: '‡πÇ‡∏ó‡∏£‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà',
      actions: [{
        actionId: uuidv4(),
        type: 'END_NOVEL_BRANCH',
        parameters: {
          endingNodeId: 'ENDING_SAFE_DAY1_SHARED',
          outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ü‡∏±‡∏á ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à',
          endingTitle: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à',
          endingType: 'NORMAL'
        }
      }],
      isMajorChoice: true,
      isArchived: false,
    },
    // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ó‡∏õ
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LISTEN_NOW',
      text: '‡∏Å‡∏î‡∏ü‡∏±‡∏á‡πÄ‡∏ó‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_listen_tape_1' } }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LISTEN_LATER',
      text: '‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏∂‡∏á‡∏ï‡∏µ‡∏™‡∏≤‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏ü‡∏±‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô',
      actions: [{
        actionId: uuidv4(),
        type: 'END_NOVEL_BRANCH',
        parameters: {
          endingNodeId: 'ENDING_CLIFFHANGER_3AM',
          outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ö‡∏ô‡πÄ‡∏ó‡∏õ... ‡∏Ñ‡∏∑‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ô‡πÅ‡∏ô‡πà? (‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ)',
          endingTitle: '‡∏Ñ‡∏≥‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ï‡∏≠‡∏ô‡∏ï‡∏µ‡∏™‡∏≤‡∏°',
          endingType: 'NORMAL'
        }
      }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_BURN_TAPE',
      text: '‡πÄ‡∏ú‡∏≤‡πÄ‡∏ó‡∏õ‡∏ó‡∏¥‡πâ‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{
        actionId: 'action_end_burn',
        type: 'END_NOVEL_BRANCH',
        parameters: {
          endingNodeId: 'ENDING_DESTROY_EVIDENCE',
          outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡πÄ‡∏ó‡∏õ‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡∏ó‡∏¥‡πâ‡∏á ‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß',
          endingTitle: '‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô',
          endingType: 'BAD'
        }
      }],
      isMajorChoice: false,
      isArchived: false,
    },
    // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏•‡∏±‡∏ö
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_OPEN_SECRET_DOOR',
      text: '‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡∏á‡πÑ‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_enter_basement_1' } }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_TAKE_PHOTO',
      text: '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_send_photo_1' } }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LOCK_DOOR',
      text: '‡∏õ‡∏¥‡∏î‡∏°‡∏±‡∏ô‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πá‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏ó‡∏±‡∏ö',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_lock_door_1' } }],
      isMajorChoice: false,
      isArchived: false,
    }
  ];

  const savedChoices = [];
  for (const choice of choices) {
    const choiceDoc = new ChoiceModel(choice);
    await choiceDoc.save();
    savedChoices.push(choiceDoc);
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedChoices.length} ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
  return savedChoices;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á ending scenes
 */
const createAllScenes = async (
  novelId: mongoose.Types.ObjectId, 
  episodeId: mongoose.Types.ObjectId, 
  characters: any[], 
  choices: any[]
) => {
  console.log('üé¨ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á ending scenes...');
  
  const characterMap = characters.reduce((acc, char) => {
    acc[char.characterCode] = char._id;
    return acc;
  }, {} as Record<string, mongoose.Types.ObjectId>);

  const choiceMap = choices.reduce((acc, choice) => {
    acc[choice.choiceCode] = choice._id;
    return acc;
  }, {} as Record<string, mongoose.Types.ObjectId>);

  // ‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á ending scenes
  const allScenes = [
    // ‡∏â‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏Å
    {
      novelId,
      episodeId,
      sceneOrder: 1,
      nodeId: 'scene_arrival',
      title: '‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
      background: { type: 'image', value: '/images/background/ChurchCorridor_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      textContents: [{
        instanceId: 'narration_1',
        type: 'narration',
        content: '‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡πâ‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ö‡∏î‡πÑ‡∏õ‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ã‡∏µ‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 9 ‚Äî ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏£‡∏á‡πÇ‡∏Ñ‡πÇ‡∏•‡πÄ‡∏ô‡∏µ‡∏¢‡∏•‡∏™‡∏≠‡∏á‡∏ä‡∏±‡πâ‡∏ô ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏á‡∏∏‡πâ‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ñ‡∏≤‡∏ß‡∏±‡∏•‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏´‡πâ‡∏á‡πÄ‡∏â‡∏≤ ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏°‡∏∑‡∏î‡∏™‡∏ô‡∏¥‡∏ó‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏¢‡πá‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏µ',
      }],
    },
    {
      novelId,
      episodeId,
      sceneOrder: 2,
      nodeId: 'scene_key_exchange',
      title: '‡∏£‡∏±‡∏ö‡∏Å‡∏∏‡∏ç‡πÅ‡∏à',
      background: { type: 'image', value: '/images/background/ChurchCorridor_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.6 },
      characters: [
        { instanceId: 'agent_char', characterId: characterMap.agent, expressionId: 'normal', transform: { positionX: 100 }, isVisible: true },
        { instanceId: 'nira_char', characterId: characterMap.nira, expressionId: 'normal', transform: { positionX: -100 }, isVisible: true },
      ],
      textContents: [
        {
          instanceId: 'dialogue_agent',
          type: 'dialogue',
          characterId: characterMap.agent,
          speakerDisplayName: '‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤',
          content: '"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏¥‡∏£‡∏≤" ‚Äî ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏¢‡∏∑‡πà‡∏ô‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ',
        },
      ],
    },
    // === ENDING SCENES ===
    // TRUE ENDING: ‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    {
      novelId,
      episodeId,
      sceneOrder: 28,
      nodeId: 'scene_true_ending',
      title: '‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢',
      background: { type: 'image', value: '/images/background/main.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 1.2 },
      textContents: [
        {
          instanceId: 'narration_no_basement',
          type: 'narration',
          content: '‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏±‡∏ö‡πÄ‡∏û‡∏•‡∏¥‡∏á‡∏û‡∏ö‡∏ß‡πà‡∏≤ ‡πÉ‡∏ï‡πâ‡∏ö‡πâ‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∏‡πÇ‡∏°‡∏á‡∏Ñ‡πå‡πÉ‡∏î ‡πÜ ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô "‡∏°‡∏±‡∏ô‡πÅ‡∏Ñ‡πà‡∏î‡∏¥‡∏ô‡∏ï‡∏±‡∏ô ‡πÜ‚Ä¶ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"'
        },
        {
          instanceId: 'narration_camera_reveal',
          type: 'narration',
          content: '‡πÅ‡∏ï‡πà‚Ä¶‡πÉ‡∏ô‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ä‡πà‡∏≤‡∏á ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏∞‡πÄ‡∏ö‡∏¥‡∏î‡∏à‡∏∞‡∏•‡∏á 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡∏°‡∏µ‡πÄ‡∏î‡πá‡∏Å‡∏´‡∏ç‡∏¥‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡πÄ‡∏î‡∏¥‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô ‡∏´‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏≤‚Ä¶ ‡πÅ‡∏•‡πâ‡∏ß‡∏¢‡∏¥‡πâ‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‚Ä¶'
        }
      ],
      ending: {
        endingType: 'TRUE',
        title: '‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢',
        description: '‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏õ‡∏•‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì‡πÄ‡∏î‡πá‡∏Å‡∏™‡∏≤‡∏ß ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏¢‡∏¢‡∏¥‡πâ‡∏°‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¥‡∏™‡∏£‡∏∞‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏≤‡∏õ‡∏ô‡∏µ‡πâ',
        endingId: 'true_ending',
        imageUrl: '/images/background/main.png'
      }
    }
  ];

  const savedScenes = [];
  for (const scene of allScenes) {
    const sceneDoc = new SceneModel(scene);
    await sceneDoc.save();
    savedScenes.push(sceneDoc);
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedScenes.length} ‡∏â‡∏≤‡∏á`);
  return savedScenes;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á Story Map ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
 */
const createStoryMap = async (novelId: mongoose.Types.ObjectId, authorId: mongoose.Types.ObjectId, choices: any[]) => {
  console.log('üìä ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Story Map...');

  const choiceCodeToId = choices.reduce((acc, choice) => {
    acc[choice.choiceCode] = choice._id;
    return acc;
  }, {} as Record<string, mongoose.Types.ObjectId>);

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß
  const storyVariables = [
    {
      variableId: uuidv4(),
      variableName: 'karma',
      dataType: StoryVariableDataType.NUMBER,
      initialValue: 0,
      description: '‡∏Ñ‡πà‡∏≤‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏´‡∏•‡∏±‡∏Å',
      allowedValues: [-100, 100],
      isGlobal: true,
      isVisibleToPlayer: false
    },
    {
      variableId: uuidv4(),
      variableName: 'has_explored_basement',
      dataType: StoryVariableDataType.BOOLEAN,
      initialValue: false,
      description: '‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á',
      isGlobal: true,
      isVisibleToPlayer: false
    }
  ];

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á node mapping
  const nodeIdMapping: Record<string, string> = {
    'start_whisper999': uuidv4(),
    'scene_arrival': uuidv4(),
    'choice_first_decision': uuidv4(),
    'ending_safe_day1': uuidv4(),
    'ending_true': uuidv4()
  };

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î nodes
  const nodes = [
    {
      nodeId: nodeIdMapping['start_whisper999'],
      nodeType: StoryMapNodeType.START_NODE,
      title: '‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô',
      position: { x: 100, y: 300 },
      nodeSpecificData: {},
      editorVisuals: {
        color: '#10B981',
        orientation: 'horizontal',
        borderRadius: 12,
        gradient: { from: '#10B981', to: '#059669', direction: 'horizontal' }
      },
      layoutConfig: { mode: 'auto', tier: 0, order: 0 }
    },
    {
      nodeId: nodeIdMapping['scene_arrival'],
      nodeType: StoryMapNodeType.SCENE_NODE,
      title: '‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
      position: { x: 400, y: 300 },
      nodeSpecificData: { sceneId: 'scene_arrival' },
      editorVisuals: { color: '#3B82F6', orientation: 'horizontal', showThumbnail: true, borderRadius: 8 },
      layoutConfig: { mode: 'auto', tier: 1, order: 0 }
    }
  ];

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î edges
  const edges = [
    {
      edgeId: uuidv4(),
      sourceNodeId: nodeIdMapping['start_whisper999'],
      sourceHandlePosition: 'right',
      targetNodeId: nodeIdMapping['scene_arrival'],
      targetHandlePosition: 'left',
      label: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á',
      editorVisuals: {
        color: '#10B981',
        lineStyle: 'solid',
        pathType: 'smooth',
        strokeWidth: 3,
        markerEnd: 'arrowclosed'
      }
    }
  ];

  const storyMap = new StoryMapModel({
    novelId,
    title: `‡πÅ‡∏ú‡∏ô‡∏ú‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á - ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999`,
    version: 1,
    description: '‡πÅ‡∏ú‡∏ô‡∏ú‡∏±‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à',
    nodes,
    edges,
    storyVariables,
    startNodeId: nodeIdMapping['start_whisper999'],
    lastModifiedByUserId: authorId,
    isActive: true,
    editorMetadata: {
      zoomLevel: 0.8,
      viewOffsetX: -50,
      viewOffsetY: -100,
      gridSize: 20,
      showGrid: true,
      showSceneThumbnails: true,
      showNodeLabels: true,
      autoLayoutAlgorithm: 'custom',
      layoutPreferences: {
        defaultOrientation: 'horizontal',
        nodeSpacing: { x: 300, y: 200 },
        tierSpacing: 300,
        autoAlign: true,
        preserveManualPositions: false,
        flowDirection: 'left-right'
      }
    }
  });

  const savedStoryMap = await storyMap.save();
  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Story Map ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedStoryMap._id}`);
  
  return savedStoryMap;
};

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏Ç‡∏¢‡∏≤‡∏¢
 */
const seedWhisper999Extended = async () => {
  try {
    console.log('üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999" (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢)...');
    
    await dbConnect();

    const authorId = await findOrCreateAuthor();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingNovel = await NovelModel.findOne({ slug: 'whisper-from-apartment-999' });
    if (existingNovel) {
      console.log('‚ö†Ô∏è ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const langCatId = await findOrCreateCategory('‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢', CategoryType.LANGUAGE, 'th');
    const themeCatId = await findOrCreateCategory('‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç', CategoryType.GENRE, 'horror');
    const subThemeCatId1 = await findOrCreateCategory('‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', CategoryType.SUB_GENRE, 'psychological');
    const ageRatingCatId = await findOrCreateCategory('18+', CategoryType.AGE_RATING, '18-plus');

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
    const novel = new NovelModel({
      title: '‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999',
      slug: 'whisper-from-apartment-999',
      author: authorId,
      synopsis: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ô‡∏¥‡∏£‡∏≤‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å ‡πÄ‡∏ò‡∏≠‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏∑‡∏≠‡πÅ‡∏õ‡∏•‡∏Å‡πÜ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Ñ‡∏≠‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô',
      longDescription: '‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏î‡∏≥‡∏î‡∏¥‡πà‡∏á‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏±‡∏ô‡∏ô‡πà‡∏≤‡∏Ç‡∏ô‡∏•‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà',
      coverImageUrl: '/images/thriller/thriller1.jpg',
      themeAssignment: {
        mainTheme: { categoryId: themeCatId, customName: '‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç' },
        subThemes: [{ categoryId: subThemeCatId1, customName: '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤' }],
        customTags: ['‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç', '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', '‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤', '‡∏ö‡πâ‡∏≤‡∏ô‡∏ú‡∏µ‡∏™‡∏¥‡∏á']
      },
      ageRatingCategoryId: ageRatingCatId,
      language: langCatId,
      status: 'PUBLISHED',
      accessLevel: 'PUBLIC',
      isCompleted: false,
      endingType: 'MULTIPLE_ENDINGS',
      totalEpisodesCount: 1,
      publishedEpisodesCount: 1,
      stats: {
        viewsCount: 852345,
        likesCount: 14876,
        averageRating: 4.85,
        followersCount: 1234
      }
    });

    await novel.save();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
    const characters = [
      {
        novelId: novel._id,
        authorId,
        characterCode: 'nira',
        name: '‡∏ô‡∏¥‡∏£‡∏≤',
        description: '‡∏´‡∏ç‡∏¥‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà',
        roleInStory: 'main_protagonist',
        colorTheme: '#A78BFA'
      }
    ];

    const savedCharacters = [];
    for (const char of characters) {
      const character = new CharacterModel(char);
      await character.save();
      savedCharacters.push(character);
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏â‡∏≤‡∏Å
    const choices = await createAllChoices(novel._id, authorId);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Episode
    const episode1 = new EpisodeModel({
      novelId: novel._id,
      authorId,
      title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1: ‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤',
      slug: 'chapter-1-moving-in',
      episodeOrder: 1,
      status: 'PUBLISHED',
      accessType: 'PAID_UNLOCK',
      priceCoins: 10
    });
    await episode1.save();

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const scenes = await createAllScenes(novel._id, episode1._id, savedCharacters, choices);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Story Map
    const storyMap = await createStoryMap(novel._id, authorId, choices);

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    await EpisodeModel.findByIdAndUpdate(episode1._id, {
      firstSceneId: scenes[0]?._id,
      sceneIds: scenes.map(s => s._id)
    });

    await NovelModel.findByIdAndUpdate(novel._id, {
      firstEpisodeId: episode1._id
    });

    console.log('\nüéâ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£ seed (‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢):');
    console.log(`üìñ ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢: ${novel.title}`);
    console.log(`üë• ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£: ${savedCharacters.length} ‡∏ï‡∏±‡∏ß`);
    console.log(`üéØ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${choices.length} ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
    console.log(`üé¨ ‡∏â‡∏≤‡∏Å: ${scenes.length} ‡∏â‡∏≤‡∏á (‡∏£‡∏ß‡∏° ending scenes)`);
    console.log(`üìä Story Map: ${storyMap._id}`);
    console.log('\n‚úÖ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    throw error;
  } finally {
    if (mongoose.connection.readyState === 1) {
      await mongoose.connection.close();
      console.log('\nüîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß');
    }
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  seedWhisper999Extended();
}

export { seedWhisper999Extended };
