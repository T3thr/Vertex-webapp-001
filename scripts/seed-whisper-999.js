// scripts/seed-whisper-999.js
const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const { v4: uuidv4 } = require('uuid');
const dbConnect = require('../src/backend/lib/mongodb-script');

// Import Models - ‡πÉ‡∏ä‡πâ dynamic imports ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö TypeScript modules
let NovelModel, EpisodeModel, SceneModel, CharacterModel, ChoiceModel, UserModel, CategoryModel;
let CategoryType;

const loadModels = async () => {
  try {
    console.log('üì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Models...');
    
    // ‡πÉ‡∏ä‡πâ dynamic import ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î ES modules
    const novelModule = await import('../src/backend/models/Novel.js');
    NovelModel = novelModule.default;
    
    const episodeModule = await import('../src/backend/models/Episode.js');
    EpisodeModel = episodeModule.default;
    
    const sceneModule = await import('../src/backend/models/Scene.js');
    SceneModel = sceneModule.default;
    
    const characterModule = await import('../src/backend/models/Character.js');
    CharacterModel = characterModule.default;
    
    const choiceModule = await import('../src/backend/models/Choice.js');
    ChoiceModel = choiceModule.default;
    
    const userModule = await import('../src/backend/models/User.js');
    UserModel = userModule.default;
    
    const categoryModule = await import('../src/backend/models/Category.js');
    CategoryModel = categoryModule.default;
    CategoryType = categoryModule.CategoryType;
    
    console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î Models ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
  } catch (error) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î Models:', error.message);
    
    // ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ alternative: ‡πÉ‡∏ä‡πâ ts-node ‡πÄ‡∏û‡∏∑‡πà‡∏≠ require TypeScript files ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏≠‡∏∑‡πà‡∏ô...');
    try {
      // ‡πÉ‡∏ä‡πâ require ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á (‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ ts-node/register)
      require('ts-node/register');
      
      NovelModel = require('../src/backend/models/Novel').default;
      EpisodeModel = require('../src/backend/models/Episode').default;
      SceneModel = require('../src/backend/models/Scene').default;
      CharacterModel = require('../src/backend/models/Character').default;
      ChoiceModel = require('../src/backend/models/Choice').default;
      UserModel = require('../src/backend/models/User').default;
      CategoryModel = require('../src/backend/models/Category').default;
      CategoryType = require('../src/backend/models/Category').CategoryType;
      
      console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î Models ‡∏î‡πâ‡∏ß‡∏¢ ts-node ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    } catch (tsError) {
      console.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î Models ‡∏î‡πâ‡∏ß‡∏¢ ts-node:', tsError.message);
      throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î Models ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ts-node ‡∏´‡∏£‡∏∑‡∏≠ compile TypeScript files');
    }
  }
};

require('dotenv').config();

const AUTHOR_USERNAME = process.env.AUTHOR_USERNAME || 'whisper_author';

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ ObjectId
 * @param {string} name - ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
 * @param {string} type - ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏≤‡∏° CategoryType enum
 * @param {string} slug - slug ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö URL
 * @returns {Promise<mongoose.Types.ObjectId>} ObjectId ‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
 */
const findOrCreateCategory = async (name, type, slug) => {
  // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏î‡πâ‡∏ß‡∏¢ slug ‡πÅ‡∏•‡∏∞ type
  let category = await CategoryModel.findOne({ slug, categoryType: type });

  // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
  if (!category) {
    category = await CategoryModel.findOne({ name, categoryType: type });
  }

  if (!category) {
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÉ‡∏´‡∏°‡πà: "${name}" (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${type})`);
    category = new CategoryModel({
      name,
      slug,
      categoryType: type,
      description: `‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${name}`,
      visibility: 'PUBLIC',
      isSystemDefined: true,
      isActive: true,
    });
    await category.save();
  } else {
    console.log(`- ‡πÉ‡∏ä‡πâ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà: "${category.name}" (‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${category.categoryType}, ID: ${category._id})`);
  }
  return category._id;
};

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á
 * @returns {Promise<mongoose.Types.ObjectId>} ObjectId ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á
 */
const findOrCreateAuthor = async () => {
  console.log('üë§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á...');
  
  let author = await UserModel.findOne({ username: AUTHOR_USERNAME });
  
  if (!author) {
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà: ${AUTHOR_USERNAME}`);
    
    const hashedPassword = await bcrypt.hash('password123', 12);
    
    author = new UserModel({
      username: AUTHOR_USERNAME,
      email: `${AUTHOR_USERNAME}@example.com`,
      password: hashedPassword,
      accounts: [{
        provider: 'credentials',
        providerAccountId: AUTHOR_USERNAME,
        type: 'credentials'
      }],
      roles: ['Writer'],
      primaryPenName: '‡∏ô‡∏±‡∏Å‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö',
      avatarUrl: '/images/default-avatar.png',
      isEmailVerified: true,
      isActive: true,
      isBanned: false,
      isDeleted: false
    });
    
    await author.save();
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${author.username} (ID: ${author._id})`);
  } else {
    console.log(`- ‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà: ${author.username} (ID: ${author._id})`);
  }
  
  return author._id;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
 */
const createCharacters = async (novelId, authorId) => {
  console.log('üë• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£...');
  
  const characters = [
    {
      novelId,
      authorId,
      characterCode: 'nira',
      name: '‡∏ô‡∏¥‡∏£‡∏≤',
      fullName: '‡∏ô‡∏¥‡∏£‡∏≤ ‡∏ß‡∏£‡∏£‡∏ì‡∏ß‡∏¥‡∏à‡∏¥‡∏ï‡∏£',
      description: '‡∏´‡∏ç‡∏¥‡∏á‡∏™‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏™‡∏∞‡∏û‡∏£‡∏∂‡∏á‡∏Å‡∏•‡∏±‡∏ß',
      age: '25',
      gender: 'female',
      roleInStory: 'main_protagonist',
      colorTheme: '#A78BFA',
      expressions: [
        { expressionId: 'normal', name: '‡∏õ‡∏Å‡∏ï‡∏¥', mediaId: new mongoose.Types.ObjectId(), mediaSourceType: 'OfficialMedia' },
        { expressionId: 'scared', name: '‡∏´‡∏ß‡∏≤‡∏î‡∏Å‡∏•‡∏±‡∏ß', mediaId: new mongoose.Types.ObjectId(), mediaSourceType: 'OfficialMedia' },
        { expressionId: 'curious', name: '‡∏™‡∏á‡∏™‡∏±‡∏¢', mediaId: new mongoose.Types.ObjectId(), mediaSourceType: 'OfficialMedia' },
      ],
      defaultExpressionId: 'normal',
      isArchived: false,
    },
    {
      novelId,
      authorId,
      characterCode: 'agent',
      name: '‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤',
      fullName: '‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå',
      description: '‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏î‡∏π‡∏°‡∏µ‡∏•‡∏±‡∏ö‡∏•‡∏°‡∏Ñ‡∏°‡πÉ‡∏ô ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ô‡∏¥‡∏£‡∏≤',
      age: '45',
      gender: 'male',
      roleInStory: 'supporting_character',
      colorTheme: '#71717A',
      expressions: [
        { expressionId: 'normal', name: '‡∏õ‡∏Å‡∏ï‡∏¥', mediaId: new mongoose.Types.ObjectId(), mediaSourceType: 'OfficialMedia' },
      ],
      defaultExpressionId: 'normal',
      isArchived: false,
    }
  ];

  const savedCharacters = [];
  for (const char of characters) {
    const character = new CharacterModel(char);
    await character.save();
    savedCharacters.push(character);
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£: ${character.name}`);
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedCharacters.length} ‡∏ï‡∏±‡∏ß`);
  return savedCharacters;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢
 */
const createChoices = async (novelId, authorId) => {
  console.log('üéØ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å...');
  
  const choices = [
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_EXPLORE',
      text: '‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ö‡πâ‡∏≤‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{
        actionId: uuidv4(),
        type: 'GO_TO_NODE',
        parameters: { targetNodeId: 'scene_explore_downstairs_1' }
      }],
      isMajorChoice: true,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_CLEAN',
      text: '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡∏ú‡πâ‡∏≤‡∏°‡πà‡∏≤‡∏ô',
      actions: [
        {
          actionId: uuidv4(),
          type: 'END_NOVEL_BRANCH',
          parameters: {
            endingNodeId: 'ENDING_SAFE_DAY1',
            outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏∏‡∏Ç‡∏ï‡πà‡∏≠‡πÑ‡∏õ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å... ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡πá‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ',
            endingTitle: '‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏ô‡∏™‡∏á‡∏ö',
            endingType: 'NORMAL'
          }
        }
      ],
      isMajorChoice: true,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_CALL',
      text: '‡πÇ‡∏ó‡∏£‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà',
      actions: [
        {
          actionId: uuidv4(),
          type: 'END_NOVEL_BRANCH',
          parameters: {
            endingNodeId: 'ENDING_SAFE_DAY1_SHARED',
            outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡πà‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ü‡∏±‡∏á ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Ç‡∏≠‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏ö‡∏≤‡∏¢‡πÉ‡∏à',
            endingTitle: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏≠‡∏∏‡πà‡∏ô‡πÉ‡∏à',
            endingType: 'NORMAL'
          }
        }
      ],
      isMajorChoice: true,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LISTEN_NOW',
      text: '‡∏Å‡∏î‡∏ü‡∏±‡∏á‡πÄ‡∏ó‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{
        actionId: uuidv4(),
        type: 'GO_TO_NODE',
        parameters: { targetNodeId: 'scene_listen_tape_1' }
      }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LISTEN_LATER',
      text: '‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏∂‡∏á‡∏ï‡∏µ‡∏™‡∏≤‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏ü‡∏±‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô',
      actions: [
        {
          actionId: uuidv4(),
          type: 'END_NOVEL_BRANCH',
          parameters: {
            endingNodeId: 'ENDING_CLIFFHANGER_3AM',
            outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ö‡∏ô‡πÄ‡∏ó‡∏õ... ‡∏Ñ‡∏∑‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏Å‡∏±‡∏ô‡πÅ‡∏ô‡πà? (‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ)',
            endingTitle: '‡∏Ñ‡∏≥‡∏ó‡πâ‡∏≤‡∏ó‡∏≤‡∏¢‡∏ï‡∏≠‡∏ô‡∏ï‡∏µ‡∏™‡∏≤‡∏°',
            endingType: 'NORMAL'
          }
        }
      ],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_BURN_TAPE',
      text: '‡πÄ‡∏ú‡∏≤‡πÄ‡∏ó‡∏õ‡∏ó‡∏¥‡πâ‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [
        {
          actionId: 'action_end_burn',
          type: 'END_NOVEL_BRANCH',
          parameters: {
            endingNodeId: 'ENDING_DESTROY_EVIDENCE',
            outcomeDescription: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡πÄ‡∏ó‡∏õ‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡∏ó‡∏¥‡πâ‡∏á ‡∏ö‡∏≤‡∏á‡∏ó‡∏µ‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏∞‡∏•‡∏∑‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡πÅ‡∏õ‡∏•‡∏Å‡πÜ ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ï‡πà‡∏≠‡πÑ‡∏õ',
            endingTitle: '‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô',
            endingType: 'BAD'
          }
        }
      ],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_OPEN_SECRET_DOOR',
      text: '‡πÄ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡∏á‡πÑ‡∏õ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_enter_basement_1' } }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_TAKE_PHOTO',
      text: '‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_send_photo_1' } }],
      isMajorChoice: false,
      isArchived: false,
    },
    {
      novelId,
      authorId,
      version: 1,
      choiceCode: 'CHOICE_LOCK_DOOR',
      text: '‡∏õ‡∏¥‡∏î‡∏°‡∏±‡∏ô‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏•‡πá‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô‡∏ó‡∏±‡∏ö',
      actions: [{ actionId: uuidv4(), type: 'GO_TO_NODE', parameters: { targetNodeId: 'scene_lock_door_1' } }],
      isMajorChoice: false,
      isArchived: false,
    }
  ];

  const savedChoices = [];
  for (const choice of choices) {
    const choiceDoc = new ChoiceModel(choice);
    await choiceDoc.save();
    savedChoices.push(choiceDoc);
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${choice.choiceCode}`);
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedChoices.length} ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
  return savedChoices;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Episode 1
 */
const createScenes = async (novelId, episodeId, characters, choices) => {
  console.log('üé¨ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...');
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á mapping ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö characters ‡πÅ‡∏•‡∏∞ choices
  const characterMap = characters.reduce((acc, char) => {
    acc[char.characterCode] = char._id;
    return acc;
  }, {});

  const choiceMap = choices.reduce((acc, choice) => {
    acc[choice.choiceCode] = choice._id;
    return acc;
  }, {});

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const scenes = [
    // === SCENE 1: ‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ñ‡∏∂‡∏á ===
    {
      novelId,
      episodeId,
      sceneOrder: 1,
      nodeId: 'scene_arrival',
      title: '‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ñ‡∏∂‡∏á',
      background: { type: 'image', value: '/images/background/ChurchCorridor_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'none', durationSeconds: 0 },
      textContents: [
        {
          instanceId: 'narration_1',
          type: 'narration',
          content: '‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏•‡πâ‡∏≠‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏ö‡∏î‡πÑ‡∏õ‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ã‡∏µ‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà 9 ‚Äî ‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏£‡∏á‡πÇ‡∏Ñ‡πÇ‡∏•‡πÄ‡∏ô‡∏µ‡∏¢‡∏•‡∏™‡∏≠‡∏á‡∏ä‡∏±‡πâ‡∏ô ‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡∏≤‡∏á‡∏∏‡πâ‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ñ‡∏≤‡∏ß‡∏±‡∏•‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏´‡πâ‡∏á‡πÄ‡∏â‡∏≤ ‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏°‡∏∑‡∏î‡∏™‡∏ô‡∏¥‡∏ó‡πÅ‡∏°‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏¢‡πá‡∏ô ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏õ‡∏µ',
        }
      ],
    },
    // === SCENE 2: ‡∏£‡∏±‡∏ö‡∏Å‡∏∏‡∏ç‡πÅ‡∏à ===
    {
      novelId,
      episodeId,
      sceneOrder: 2,
      nodeId: 'scene_key_exchange',
      title: '‡∏£‡∏±‡∏ö‡∏Å‡∏∏‡∏ç‡πÅ‡∏à',
      background: { type: 'image', value: '/images/background/ChurchCorridor_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.6 },
      characters: [
        { instanceId: 'agent_char', characterId: characterMap.agent, expressionId: 'normal', transform: { positionX: 100 }, isVisible: true },
        { instanceId: 'nira_char', characterId: characterMap.nira, expressionId: 'normal', transform: { positionX: -100 }, isVisible: true },
      ],
      textContents: [
        {
          instanceId: 'dialogue_agent',
          type: 'dialogue',
          characterId: characterMap.agent,
          speakerDisplayName: '‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤',
          content: '"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö ‡∏Ñ‡∏∏‡∏ì‡∏ô‡∏¥‡∏£‡∏≤" ‚Äî ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏™‡∏±‡∏á‡∏´‡∏≤‡∏£‡∏¥‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏¢‡∏∑‡πà‡∏ô‡∏Å‡∏∏‡∏ç‡πÅ‡∏à‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡πâ',
        },
      ],
    },
    // === SCENE 3: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏£‡∏≤ ===
    {
      novelId,
      episodeId,
      sceneOrder: 3,
      nodeId: 'scene_nira_thoughts',
      title: '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡∏ô‡∏¥‡∏£‡∏≤',
      background: { type: 'image', value: '/images/background/ChurchCourtyardA_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.6 },
      characters: [
        { instanceId: 'nira_char_thinking', characterId: characterMap.nira, expressionId: 'curious', transform: { positionX: 0 }, isVisible: true },
      ],
      textContents: [
        {
          instanceId: 'dialogue_nira_internal',
          type: 'dialogue',
          characterId: characterMap.nira,
          speakerDisplayName: '‡∏ô‡∏¥‡∏£‡∏≤ (‡∏Ñ‡∏¥‡∏î‡πÉ‡∏ô‡πÉ‡∏à)',
          content: '"‡∏ö‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å‡∏à‡∏ô‡∏ô‡πà‡∏≤‡∏ï‡∏Å‡πÉ‡∏à ‡πÅ‡∏ï‡πà‡∏™‡∏ß‡∏¢‡∏î‡∏µ" ‡∏ô‡∏¥‡∏£‡∏≤‡∏û‡∏∂‡∏°‡∏û‡∏≥‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á',
        },
      ],
    },
    // === SCENE 4: ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ===
    {
      novelId,
      episodeId,
      sceneOrder: 4,
      nodeId: 'scene_agent_warning',
      title: '‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô',
      background: { type: 'image', value: '/images/background/ChurchCorridor_Sunset.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.8 },
      characters: [
          { instanceId: 'agent_char_leaving', characterId: characterMap.agent, expressionId: 'normal', transform: { positionX: 100, opacity: 0.5 }, isVisible: true },
      ],
      textContents: [
        {
          instanceId: 'dialogue_agent_whisper',
          type: 'narration',
          content: '"‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏µ‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏∑‡∏≠‚Ä¶" ‡∏ô‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡πÄ‡∏ö‡∏≤‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏µ‡∏ö‡∏´‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏õ',
        },
      ],
    },
    // === SCENE 5: ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô ===
    {
      novelId,
      episodeId,
      sceneOrder: 5,
      nodeId: 'scene_enter_house',
      title: '‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô',
      background: { type: 'image', value: '/images/background/BG39.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'none', durationSeconds: 0 },
      textContents: [
        {
          instanceId: 'narration_enter',
          type: 'narration',
          content: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏ö ‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏•‡∏≠‡∏î‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏ù‡∏∏‡πà‡∏ô ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏î‡∏±‡∏ö‡∏ß‡∏π‡∏ö...',
        },
      ],
    },
    // === SCENE 6: ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏£‡∏Å ===
    {
      novelId,
      episodeId,
      sceneOrder: 6,
      nodeId: 'scene_first_choice',
      title: '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏£‡∏Å',
      background: { type: 'image', value: '/images/background/BG39.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.6 },
      textContents: [
        {
          instanceId: 'choice_prompt',
          type: 'narration',
          content: '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÅ‡∏£‡∏Å?',
        },
      ],
      choiceIds: [choiceMap.CHOICE_EXPLORE, choiceMap.CHOICE_CLEAN, choiceMap.CHOICE_CALL]
    },
    // === SCENE 7: ‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á ===
    {
      novelId,
      episodeId,
      sceneOrder: 7,
      nodeId: 'scene_explore_downstairs_1',
      title: '‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á',
      background: { type: 'image', value: '/images/background/BG43.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'fade', durationSeconds: 0.6 },
      textContents: [
        {
          instanceId: 'narration_explore_1',
          type: 'narration',
          content: '‡πÄ‡∏ò‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏¥‡∏ô‡∏™‡∏≥‡∏£‡∏ß‡∏à‡∏£‡∏≠‡∏ö‡∏ö‡πâ‡∏≤‡∏ô ‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏î‡∏π‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà',
        },
      ],
    },
    // === SCENE 8: ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡πÄ‡∏Å‡πà‡∏≤ ===
    {
      novelId,
      episodeId,
      sceneOrder: 8,
      nodeId: 'scene_found_box',
      title: '‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡πÄ‡∏Å‡πà‡∏≤',
      background: { type: 'image', value: '/images/background/home.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'none', durationSeconds: 0 },
      textContents: [
        {
          instanceId: 'narration_found_box',
          type: 'narration',
          content: '‡∏Ç‡∏ì‡∏∞‡πÄ‡∏î‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏ö‡∏±‡∏ô‡πÑ‡∏î ‡πÄ‡∏ò‡∏≠‡∏™‡∏±‡∏á‡πÄ‡∏Å‡∏ï‡πÄ‡∏´‡πá‡∏ô "‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÑ‡∏°‡πâ‡πÄ‡∏Å‡πà‡∏≤" ‡∏°‡∏µ‡∏ï‡∏£‡∏≤‡∏õ‡∏£‡∏∞‡∏ó‡∏±‡∏ö‡∏õ‡∏µ 1974',
        },
      ],
    },
    // === SCENE 9: ‡πÄ‡∏ó‡∏õ‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö ===
    {
      novelId,
      episodeId,
      sceneOrder: 9,
      nodeId: 'scene_found_tape',
      title: '‡πÄ‡∏ó‡∏õ‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö',
      background: { type: 'image', value: '/images/background/home.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'none', durationSeconds: 0 },
      textContents: [
        {
          instanceId: 'narration_found_tape',
          type: 'narration',
          content: '‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏ó‡∏õ‡∏û‡∏Å‡∏û‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≤‡∏™‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠‡∏ß‡πà‡∏≤ "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô - ‡∏´‡πâ‡∏≤‡∏°‡∏ü‡∏±‡∏á‡∏ï‡∏≠‡∏ô‡∏ï‡∏µ‡∏™‡∏≤‡∏°"',
        },
      ],
    },
    // === SCENE 10: ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡∏õ ===
    {
      novelId,
      episodeId,
      sceneOrder: 10,
      nodeId: 'scene_tape_choice',
      title: '‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡∏õ',
      background: { type: 'image', value: '/images/background/home.png', isOfficialMedia: true, fitMode: 'cover' },
      sceneTransitionOut: { type: 'none', durationSeconds: 0 },
      textContents: [
        {
          instanceId: 'choice_prompt',
          type: 'narration',
          content: '‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£?',
        },
      ],
      choiceIds: [choiceMap.CHOICE_LISTEN_NOW, choiceMap.CHOICE_LISTEN_LATER, choiceMap.CHOICE_BURN_TAPE]
    }
  ];

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const savedScenes = [];
  for (const scene of scenes) {
    const sceneDoc = new SceneModel(scene);
    await sceneDoc.save();
    savedScenes.push(sceneDoc);
    console.log(`- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å: ${scene.title} (Order: ${scene.sceneOrder})`);
  }

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï defaultNextSceneId ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏â‡∏≤‡∏Å
  const sceneNodeIdMap = savedScenes.reduce((acc, scene) => {
    if (scene.nodeId) {
      acc[scene.nodeId] = scene._id.toString();
    }
    return acc;
  }, {});

  const sceneUpdates = [
    { from: 'scene_arrival', to: 'scene_key_exchange' },
    { from: 'scene_key_exchange', to: 'scene_nira_thoughts' },
    { from: 'scene_nira_thoughts', to: 'scene_agent_warning' },
    { from: 'scene_agent_warning', to: 'scene_enter_house' },
    { from: 'scene_enter_house', to: 'scene_first_choice' },
    { from: 'scene_explore_downstairs_1', to: 'scene_found_box' },
    { from: 'scene_found_box', to: 'scene_found_tape' },
    { from: 'scene_found_tape', to: 'scene_tape_choice' }
  ];

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï defaultNextSceneId
  for (const update of sceneUpdates) {
    const fromSceneId = sceneNodeIdMap[update.from];
    const toSceneId = sceneNodeIdMap[update.to];

    if (fromSceneId && toSceneId) {
      await SceneModel.findByIdAndUpdate(fromSceneId, {
        defaultNextSceneId: new mongoose.Types.ObjectId(toSceneId)
      });
    }
  }

  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${savedScenes.length} ‡∏â‡∏≤‡∏Å`);
  return savedScenes;
};

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ The Whisper of 999
 */
const createWhisper999Novel = async (authorId) => {
  console.log('üìñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢ "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999"...');

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
  console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà...');
  const langCatId = await findOrCreateCategory('‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢', 'LANGUAGE', 'th');
  const themeCatId = await findOrCreateCategory('‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç', 'GENRE', 'horror');
  const subThemeCatId1 = await findOrCreateCategory('‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', 'SUB_GENRE', 'psychological');
  const subThemeCatId2 = await findOrCreateCategory('‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤', 'SUB_GENRE', 'mystery');
  const moodToneCatId1 = await findOrCreateCategory('‡∏•‡∏∂‡∏Å‡∏•‡∏±‡∏ö', 'MOOD_AND_TONE', 'mysterious');
  const moodToneCatId2 = await findOrCreateCategory('‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß', 'MOOD_AND_TONE', 'scary');
  const ageRatingCatId = await findOrCreateCategory('18+', 'AGE_RATING', '18-plus');

  console.log('‚úÖ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');

  const novel = new NovelModel({
    title: '‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999',
    slug: 'whisper-from-apartment-999',
    author: authorId,
    synopsis: '‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ô‡∏¥‡∏£‡∏≤‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å ‡πÄ‡∏ò‡∏≠‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏∑‡∏≠‡πÅ‡∏õ‡∏•‡∏Å‡πÜ ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Ñ‡∏≠‡∏¢‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ò‡∏≠‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏∞‡∏ï‡∏≤‡∏Å‡∏£‡∏£‡∏°',
    longDescription: '‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏û‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏î‡∏≥‡∏î‡∏¥‡πà‡∏á‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏Å‡∏≤‡∏®‡∏≠‡∏±‡∏ô‡∏ô‡πà‡∏≤‡∏Ç‡∏ô‡∏•‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ã‡πà‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏ó‡∏∏‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏≤‡∏à‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏¢',
    coverImageUrl: '/images/thriller/thriller1.jpg',
    bannerImageUrl: '/images/background/badend1.png',
    themeAssignment: {
      mainTheme: {
        categoryId: themeCatId,
        customName: '‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç'
      },
      subThemes: [
        { categoryId: subThemeCatId1, customName: '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤' },
        { categoryId: subThemeCatId2, customName: '‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤' }
      ],
      moodAndTone: [moodToneCatId1, moodToneCatId2],
      contentWarnings: [],
      customTags: ['‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç', '‡∏à‡∏¥‡∏ï‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤', '‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤', '‡∏ö‡πâ‡∏≤‡∏ô‡∏ú‡∏µ‡∏™‡∏¥‡∏á', '‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°', '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥']
    },
    ageRatingCategoryId: ageRatingCatId,
    language: langCatId,
    status: 'PUBLISHED',
    accessLevel: 'PUBLIC',
    isCompleted: false,
    endingType: 'MULTIPLE_ENDINGS',
    sourceType: {
      type: 'INTERACTIVE_FICTION'
    },
    totalEpisodesCount: 1,
    publishedEpisodesCount: 1,
    isFeatured: true,
    publishedAt: new Date(),
    lastContentUpdatedAt: new Date(),
    stats: {
      viewsCount: 852345,
      uniqueViewersCount: 55678,
      likesCount: 14876,
      commentsCount: 1045,
      discussionThreadCount: 142,
      ratingsCount: 1055,
      averageRating: 4.85,
      followersCount: 1234,
      sharesCount: 567,
      bookmarksCount: 2345,
      totalWords: 15000,
      estimatedReadingTimeMinutes: 75,
      completionRate: 0,
      purchasesCount: 0,
      lastPublishedEpisodeAt: new Date(),
      currentReaders: 0,
      peakConcurrentReaders: 0,
      trendingStats: {
        viewsLast24h: 15876,
        likesLast24h: 1210,
        commentsLast24h: 155,
        trendingScore: 9999,
        lastTrendingScoreUpdate: new Date(),
      },
    },
    monetizationSettings: {
      isCoinBasedUnlock: true,
      defaultEpisodePriceCoins: 10,
      allowDonations: true,
      isAdSupported: false,
      isPremiumExclusive: false,
      activePromotion: {
        isActive: true,
        promotionalPriceCoins: 5,
        promotionStartDate: new Date(),
        promotionEndDate: new Date(new Date().setDate(new Date().getDate() + 7)),
        promotionDescription: "‡∏•‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà!",
      },
    },
    psychologicalAnalysisConfig: {
      allowsPsychologicalAnalysis: false,
      sensitiveChoiceCategoriesBlocked: []
    },
    collaborationSettings: {
      allowCoAuthorRequests: false,
      pendingCoAuthors: []
    },
  });

  await novel.save();
  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${novel.title} (ID: ${novel._id})`);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
  const characters = await createCharacters(novel._id, authorId);
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const choices = await createChoices(novel._id, authorId);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Episode 1
  console.log('üìñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á Episode 1...');
  const episode1 = new EpisodeModel({
    novelId: novel._id,
    authorId,
    title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1: ‡∏¢‡πâ‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤',
    slug: 'chapter-1-moving-in',
    episodeOrder: 1,
    status: 'PUBLISHED',
    accessType: 'PAID_UNLOCK',
    priceCoins: 10,
    teaserText: '‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏ñ‡∏∂‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏ö‡∏ö... ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Å‡πá‡πÅ‡∏ï‡πà‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏à‡∏ô‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢',
    publishedAt: new Date(),
    isPreviewAllowed: true,
    stats: {
      viewsCount: 45231,
      uniqueViewersCount: 12456,
      likesCount: 3456,
      commentsCount: 234,
      totalWords: 8500,
      estimatedReadingTimeMinutes: 35,
      purchasesCount: 1876,
    }
  });

  await episode1.save();
  console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Episode 1 ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: ${episode1.title} (ID: ${episode1._id})`);

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏â‡∏≤‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Episode 1
  const scenes = await createScenes(novel._id, episode1._id, characters, choices);

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Episode 1 ‡∏î‡πâ‡∏ß‡∏¢ sceneIds ‡πÅ‡∏•‡∏∞ firstSceneId
  await EpisodeModel.findByIdAndUpdate(episode1._id, {
    firstSceneId: scenes[0]?._id,
    sceneIds: scenes.map(s => s._id)
  });

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Novel ‡∏î‡πâ‡∏ß‡∏¢ firstEpisodeId
  await NovelModel.findByIdAndUpdate(novel._id, {
    firstEpisodeId: episode1._id
  });

  console.log('‚úÖ ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999 ‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß!');

  return {
    novel,
    episode: episode1,
    characters,
    choices,
    scenes
  };
};

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
 */
const seedWhisper999 = async () => {
  try {
    console.log('üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏à‡∏≤‡∏Å‡∏≠‡∏û‡∏≤‡∏£‡πå‡∏ï‡πÄ‡∏°‡∏ô‡∏ó‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç999"...');
    
    // ‡πÇ‡∏´‡∏•‡∏î Models ‡∏Å‡πà‡∏≠‡∏ô
    await loadModels();
    
    await dbConnect();

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á
    const authorId = await findOrCreateAuthor();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingNovel = await NovelModel.findOne({ 
      slug: 'whisper-from-apartment-999' 
    });

    if (existingNovel) {
      console.log('‚ö†Ô∏è ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á...');
      console.log(`üìñ ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà: ${existingNovel.title} (ID: ${existingNovel._id})`);
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà
    const result = await createWhisper999Novel(authorId);

    console.log('\nüéâ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£ seed:');
    console.log(`üìñ ‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢: ${result.novel.title}`);
    console.log(`üìö Episode: ${result.episode.title}`);
    console.log(`üë• ‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£: ${result.characters.length} ‡∏ï‡∏±‡∏ß`);
    console.log(`üéØ ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${result.choices.length} ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å`);
    console.log(`üé¨ ‡∏â‡∏≤‡∏Å: ${result.scenes.length} ‡∏â‡∏≤‡∏Å`);
    console.log('\n‚úÖ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');

  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£ seed ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    throw error;
  } finally {
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    if (mongoose.connection.readyState === 1) {
      await mongoose.connection.close();
      console.log('üîå ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß');
    }
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô seed ‡∏´‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  seedWhisper999();
}

module.exports = { seedWhisper999 };
